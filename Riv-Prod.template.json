{
  "Resources": {
    "RivProdNetwork4997B0D7": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/Resource"
      }
    },
    "RivProdNetworkDefaultSubnet1SubnetD8510F65": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Default"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/Subnet"
      }
    },
    "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/RouteTable"
      }
    },
    "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
        },
        "SubnetId": {
          "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/RouteTableAssociation"
      }
    },
    "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "RivProdNetworkPublicSubnet1NATGatewayEA1AB717"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/DefaultRoute"
      }
    },
    "RivProdNetworkDefaultSubnet2Subnet56EB9307": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "AvailabilityZone": "us-east-1b",
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Default"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/Subnet"
      }
    },
    "RivProdNetworkDefaultSubnet2RouteTable502AB6BB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/RouteTable"
      }
    },
    "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
        },
        "SubnetId": {
          "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/RouteTableAssociation"
      }
    },
    "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "RivProdNetworkPublicSubnet1NATGatewayEA1AB717"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/DefaultRoute"
      }
    },
    "RivProdNetworkPublicSubnet1SubnetA0CF7DD1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/Subnet"
      }
    },
    "RivProdNetworkPublicSubnet1RouteTable6E75BCD0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/RouteTable"
      }
    },
    "RivProdNetworkPublicSubnet1RouteTableAssociation44ABA0EA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
        },
        "SubnetId": {
          "Ref": "RivProdNetworkPublicSubnet1SubnetA0CF7DD1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/RouteTableAssociation"
      }
    },
    "RivProdNetworkPublicSubnet1DefaultRoute30B871D4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "RivProdNetworkIGWDFD242C8"
        }
      },
      "DependsOn": [
        "RivProdNetworkVPCGWE2BF3263"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/DefaultRoute"
      }
    },
    "RivProdNetworkPublicSubnet1EIP8917BFC9": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/EIP"
      }
    },
    "RivProdNetworkPublicSubnet1NATGatewayEA1AB717": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "RivProdNetworkPublicSubnet1SubnetA0CF7DD1"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "RivProdNetworkPublicSubnet1EIP8917BFC9",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/NATGateway"
      }
    },
    "RivProdNetworkPublicSubnet2Subnet376BC495": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "AvailabilityZone": "us-east-1b",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet2"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/Subnet"
      }
    },
    "RivProdNetworkPublicSubnet2RouteTableC3C60287": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet2"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/RouteTable"
      }
    },
    "RivProdNetworkPublicSubnet2RouteTableAssociation06CC3CEF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
        },
        "SubnetId": {
          "Ref": "RivProdNetworkPublicSubnet2Subnet376BC495"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/RouteTableAssociation"
      }
    },
    "RivProdNetworkPublicSubnet2DefaultRoute144ABE3F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "RivProdNetworkIGWDFD242C8"
        }
      },
      "DependsOn": [
        "RivProdNetworkVPCGWE2BF3263"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/DefaultRoute"
      }
    },
    "RivProdNetworkReservedSubnet1SubnetA8B507FA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "AvailabilityZone": "us-east-1a",
        "CidrBlock": "10.0.192.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Reserved"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1/Subnet"
      }
    },
    "RivProdNetworkReservedSubnet1RouteTableC40A63E7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1/RouteTable"
      }
    },
    "RivProdNetworkReservedSubnet1RouteTableAssociation1B794BB0": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkReservedSubnet1RouteTableC40A63E7"
        },
        "SubnetId": {
          "Ref": "RivProdNetworkReservedSubnet1SubnetA8B507FA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1/RouteTableAssociation"
      }
    },
    "RivProdNetworkReservedSubnet2Subnet7E0F9E9F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "AvailabilityZone": "us-east-1b",
        "CidrBlock": "10.0.224.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Reserved"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2/Subnet"
      }
    },
    "RivProdNetworkReservedSubnet2RouteTableF3A1346C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2/RouteTable"
      }
    },
    "RivProdNetworkReservedSubnet2RouteTableAssociation2B3B9555": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RivProdNetworkReservedSubnet2RouteTableF3A1346C"
        },
        "SubnetId": {
          "Ref": "RivProdNetworkReservedSubnet2Subnet7E0F9E9F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2/RouteTableAssociation"
      }
    },
    "RivProdNetworkIGWDFD242C8": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Riv-Prod/Riv-Prod/Network"
          },
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/IGW"
      }
    },
    "RivProdNetworkVPCGWE2BF3263": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "InternetGatewayId": {
          "Ref": "RivProdNetworkIGWDFD242C8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/VPCGW"
      }
    },
    "RivProdEndpointsEndpointSecurity527AA3A4": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG for AWS Resources in isolated subnet",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:Any source",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Endpoints/EndpointSecurity/Resource"
      }
    },
    "RivProdEndpointss36F2E44E7": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "RouteTableIds": [
          {
            "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
          },
          {
            "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
          },
          {
            "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
          },
          {
            "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
          },
          {
            "Ref": "RivProdNetworkReservedSubnet1RouteTableC40A63E7"
          },
          {
            "Ref": "RivProdNetworkReservedSubnet2RouteTableF3A1346C"
          }
        ],
        "VpcEndpointType": "Gateway"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Endpoints/s3/Resource"
      }
    },
    "RivProdEndpointsdynamodbE5D9CE28": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".dynamodb"
            ]
          ]
        },
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        },
        "RouteTableIds": [
          {
            "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
          },
          {
            "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
          },
          {
            "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
          },
          {
            "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
          },
          {
            "Ref": "RivProdNetworkReservedSubnet1RouteTableC40A63E7"
          },
          {
            "Ref": "RivProdNetworkReservedSubnet2RouteTableF3A1346C"
          }
        ],
        "VpcEndpointType": "Gateway"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/Riv-Prod/Endpoints/dynamodb/Resource"
      }
    },
    "SecurityGroupDD263621": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Default-SG for Riv-Prod RIV stack",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Grant icmp from anywhere",
            "FromPort": -1,
            "IpProtocol": "icmp",
            "ToPort": -1
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "VpcId": {
          "Ref": "RivProdNetwork4997B0D7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SecurityGroup/Resource"
      }
    },
    "SharedStorageMetadataFaceTable609BE09F": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "PartitionKey",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "SortKey",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "PartitionKey",
            "AttributeType": "S"
          },
          {
            "AttributeName": "SortKey",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Metadata/FaceTable/Resource"
      }
    },
    "SharedStorageImagesImageBucket7DE5900F": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "InventoryConfigurations": [
          {
            "Destination": {
              "BucketAccountId": {
                "Ref": "AWS::AccountId"
              },
              "BucketArn": {
                "Fn::GetAtt": [
                  "SharedStorageImagesInventoryBucketAB8FEEDF",
                  "Arn"
                ]
              },
              "Format": "CSV"
            },
            "Enabled": true,
            "Id": "Full-InventoryReport",
            "IncludedObjectVersions": "Current",
            "ScheduleFrequency": "Daily"
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/ImageBucket/Resource"
      }
    },
    "SharedStorageImagesInventoryBucketAB8FEEDF": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryBucket/Resource"
      }
    },
    "SharedStorageImagesInventoryBucketNotifications178C3FC5": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "SharedStorageImagesInventoryBucketAB8FEEDF"
        },
        "NotificationConfiguration": {
          "TopicConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "suffix",
                      "Value": "manifest.json"
                    }
                  ]
                }
              },
              "TopicArn": {
                "Ref": "SharedStorageImagesInventoryCreatedDDC221E6"
              }
            }
          ]
        },
        "Managed": true
      },
      "DependsOn": [
        "SharedStorageImagesInventoryCreatedPolicyF5BA3E4D",
        "SharedStorageImagesInventoryCreatedDDC221E6"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryBucket/Notifications/Resource"
      }
    },
    "SharedStorageImagesInventoryBucketPolicy9B242F9F": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "SharedStorageImagesInventoryBucketAB8FEEDF"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "SharedStorageImagesImageBucket7DE5900F",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SharedStorageImagesInventoryBucketAB8FEEDF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SharedStorageImagesInventoryBucketAB8FEEDF",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryBucket/Policy/Resource"
      }
    },
    "SharedStorageImagesInventoryCreatedDDC221E6": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Riv-Prod-ImageStore-InventoryCreated",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TopicName": "Riv-Prod-ImageStore-InventoryCreated"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryCreated/Resource"
      }
    },
    "SharedStorageImagesInventoryCreatedPolicyF5BA3E4D": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "SharedStorageImagesInventoryBucketAB8FEEDF",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Resource": {
                "Ref": "SharedStorageImagesInventoryCreatedDDC221E6"
              },
              "Sid": "0"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "SharedStorageImagesInventoryCreatedDDC221E6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryCreated/Policy/Resource"
      }
    },
    "SharedStorageImagesInventoryCreatedDebugQueueB607F406": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryCreatedDebugQueue/Resource"
      }
    },
    "SharedStorageImagesInventoryCreatedDebugQueuePolicy07EFDE54": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "SharedStorageImagesInventoryCreatedDDC221E6"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "SharedStorageImagesInventoryCreatedDebugQueueB607F406",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "SharedStorageImagesInventoryCreatedDebugQueueB607F406"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryCreatedDebugQueue/Policy/Resource"
      }
    },
    "SharedStorageImagesInventoryCreatedDebugQueueRivProdSharedStorageImagesInventoryCreated5256E3A9B1946D5C": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "SharedStorageImagesInventoryCreatedDDC221E6"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "SharedStorageImagesInventoryCreatedDebugQueueB607F406",
            "Arn"
          ]
        },
        "RawMessageDelivery": true
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/SharedStorage/Images/InventoryCreatedDebugQueue/RivProdSharedStorageImagesInventoryCreated5256E3A9/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Timeout": 300,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "UserPortalFunctionsCompareFacesRoleCDFF36AC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalCompareFaces for the CompareFaces component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/Role/Resource"
      }
    },
    "UserPortalFunctionsCompareFacesRoleDefaultPolicy0498D433": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SharedStorageMetadataFaceTable609BE09F",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsCompareFacesRoleDefaultPolicy0498D433",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsCompareFacesRoleCDFF36AC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersdd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31S3BucketA3FD501C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersdd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31S3VersionKey20A7BC5A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersdd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31S3VersionKey20A7BC5A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsCompareFacesRoleCDFF36AC",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for CompareFaces",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsCompareFacesSharedDepsBB15B7E8"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsCompareFacesRoleDefaultPolicy0498D433",
        "UserPortalFunctionsCompareFacesRoleCDFF36AC"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/LambdaFunction/Resource",
        "aws:asset:path": "asset.dd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31",
        "aws:asset:original-path": "/files/src/rekognition/compare-faces",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsCompareFacesSharedDepsBB15B7E8": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:original-path": "/files/src/shared",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalFunctionsDetectFacesRole80C76BF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalDetectFaces for the DetectFaces component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/Role/Resource"
      }
    },
    "UserPortalFunctionsDetectFacesRoleDefaultPolicyFD1CA8F3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsDetectFacesRoleDefaultPolicyFD1CA8F3",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsDetectFacesRole80C76BF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4S3Bucket25D82D46"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4S3VersionKeyC8B1DE28"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4S3VersionKeyC8B1DE28"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsDetectFacesRole80C76BF2",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for DetectFaces",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsDetectFacesSharedDeps049F610A"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsDetectFacesRoleDefaultPolicyFD1CA8F3",
        "UserPortalFunctionsDetectFacesRole80C76BF2"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/LambdaFunction/Resource",
        "aws:asset:path": "asset.2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4",
        "aws:asset:original-path": "/files/src/rekognition/detect-faces",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsDetectFacesSharedDeps049F610A": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:original-path": "/files/src/shared",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalFunctionsSearchFacesRole378D7883": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalSearchFacesByImage for the SearchFaces component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/Role/Resource"
      }
    },
    "UserPortalFunctionsSearchFacesRoleDefaultPolicyF671B579": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsSearchFacesRoleDefaultPolicyF671B579",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsSearchFacesRole378D7883"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsSearchFacesLambdaFunction780C379C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameterscc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477S3Bucket434C1646"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterscc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477S3VersionKey892CE8B5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameterscc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477S3VersionKey892CE8B5"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsSearchFacesRole378D7883",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for SearchFaces",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsSearchFacesSharedDepsF6661C73"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsSearchFacesRoleDefaultPolicyF671B579",
        "UserPortalFunctionsSearchFacesRole378D7883"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/LambdaFunction/Resource",
        "aws:asset:path": "asset.cc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477",
        "aws:asset:original-path": "/files/src/rekognition/search-faces",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsSearchFacesSharedDepsF6661C73": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:original-path": "/files/src/shared",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalFunctionsExtractIdCardRole4955A0C5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalExtractIdCard for the Extract-IdCard component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonTextractFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/Role/Resource"
      }
    },
    "UserPortalFunctionsExtractIdCardRoleDefaultPolicy8AD0B36A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsExtractIdCardRoleDefaultPolicy8AD0B36A",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsExtractIdCardRole4955A0C5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2dS3BucketD72F6A4A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2dS3VersionKeyF031342E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2dS3VersionKeyF031342E"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsExtractIdCardRole4955A0C5",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for Extract-IdCard",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsExtractIdCardSharedDeps8700438E"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsExtractIdCardRoleDefaultPolicy8AD0B36A",
        "UserPortalFunctionsExtractIdCardRole4955A0C5"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/LambdaFunction/Resource",
        "aws:asset:path": "asset.5f1e933369e63829a06786af8dfd7b6a6d3b65c5c0b82da41d9162d494ad2c8b",
        "aws:asset:original-path": "/files/src/textract/extract-idcard",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsExtractIdCardSharedDeps8700438E": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:original-path": "/files/src/shared",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalCompareFacesWithIDCard for the CompareFacesWithIDCard component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/Role/Resource"
      }
    },
    "UserPortalFunctionsCompareFacesWithIDCardRoleDefaultPolicy61F09AF1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsCompareFacesWithIDCardRoleDefaultPolicy61F09AF1",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246bS3BucketD72F6A4A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246bS3VersionKeyF031342E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246bS3VersionKeyF031342E"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for CompareFacesWithIDCard",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsCompareFacesWithIDCardSharedDeps54674489"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsCompareFacesWithIDCardRoleDefaultPolicy61F09AF1",
        "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/LambdaFunction/Resource",
        "aws:asset:path": "asset.99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246b",
        "aws:asset:original-path": "/files/src/rekognition/compare-face-with-idcard",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsCompareFacesWithIDCardSharedDeps54674489": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:original-path": "/files/src/shared",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalFunctionsResetUserRole2A662A9B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalResetUser for the ResetUser component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/Role/Resource"
      }
    },
    "UserPortalFunctionsResetUserRoleDefaultPolicyA86D4936": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SharedStorageMetadataFaceTable609BE09F",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsResetUserRoleDefaultPolicyA86D4936",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsResetUserRole2A662A9B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsResetUserLambdaFunction42DCB7C0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0cS3Bucket04AFB68D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0cS3VersionKeyC247374B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0cS3VersionKeyC247374B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsResetUserRole2A662A9B",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for ResetUser",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsResetUserSharedDeps41F386E6"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsResetUserRoleDefaultPolicyA86D4936",
        "UserPortalFunctionsResetUserRole2A662A9B"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/LambdaFunction/Resource",
        "aws:asset:path": "asset.454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0c",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsResetUserSharedDeps41F386E6": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalFunctionsIndexFacesRole2B346555": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "RivUserPortalIndexFaces for the IndexFaces component.",
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonRekognitionFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/Role/Resource"
      }
    },
    "UserPortalFunctionsIndexFacesRoleDefaultPolicyE258D60E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:us-east-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter/riv/Riv-Prod/rekognition/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SharedStorageMetadataFaceTable609BE09F",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "SharedStorageImagesImageBucket7DE5900F",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalFunctionsIndexFacesRoleDefaultPolicyE258D60E",
        "Roles": [
          {
            "Ref": "UserPortalFunctionsIndexFacesRole2B346555"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20S3Bucket05917254"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20S3VersionKeyDF56680A"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20S3VersionKeyDF56680A"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "UserPortalFunctionsIndexFacesRole2B346555",
            "Arn"
          ]
        },
        "Description": "Python container lambda function for IndexFaces",
        "Environment": {
          "Variables": {
            "REGION": "us-east-1",
            "RIV_STACK_NAME": "Riv-Prod",
            "FACE_TABLE_NAME": {
              "Ref": "SharedStorageMetadataFaceTable609BE09F"
            },
            "IMAGE_BUCKET_NAME": {
              "Ref": "SharedStorageImagesImageBucket7DE5900F"
            }
          }
        },
        "Handler": "handler.function_main",
        "Layers": [
          {
            "Ref": "UserPortalFunctionsIndexFacesSharedDepsCB1DAA9F"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupDD263621",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
            },
            {
              "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
            }
          ]
        }
      },
      "DependsOn": [
        "UserPortalFunctionsIndexFacesRoleDefaultPolicyE258D60E",
        "UserPortalFunctionsIndexFacesRole2B346555"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/LambdaFunction/Resource",
        "aws:asset:path": "asset.ea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20",
        "aws:asset:original-path": "/files/src/rekognition/index-faces",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UserPortalFunctionsIndexFacesSharedDepsCB1DAA9F": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python3.8"
        ],
        "Description": "Shared dependencies"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/SharedDeps/Resource",
        "aws:asset:path": "asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "UserPortalGatewayUserPortal1E4ECB13": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Gateway for RivUserPortalGateway",
        "Name": "Riv-Prod-UserPortal",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Resource"
      }
    },
    "UserPortalGatewayUserPortalCloudWatchRoleDF5FFE06": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/CloudWatchRole/Resource"
      }
    },
    "UserPortalGatewayUserPortalAccount27E32CA6": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "UserPortalGatewayUserPortalCloudWatchRoleDF5FFE06",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UserPortalGatewayUserPortal1E4ECB13"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Account"
      }
    },
    "UserPortalGatewayUserPortalDeployment0587A3E15406ee741e4ff60829b888f0c8b5c181": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "Description": "Gateway for RivUserPortalGateway"
      },
      "DependsOn": [
        "UserPortalGatewayModelsAuthenticateRequestFB958DEC",
        "UserPortalGatewayModelsAuthenticateUserResponse955C723F",
        "UserPortalGatewayModelsRegisterIdCardRequest233A1A2C",
        "UserPortalGatewayModelsRegisterUserRequest1C8965E9",
        "UserPortalGatewayModelsRegisterUserResponse6B39DB57",
        "UserPortalGatewayModelsUpdateUserRequest17A1D07F",
        "UserPortalGatewayModelsUpdateUserResponse9EB11910",
        "UserPortalGatewayUserPortalauthOPTIONS37D1C955",
        "UserPortalGatewayUserPortalauthPOSTF9F22DE9",
        "UserPortalGatewayUserPortalauth5BE56259",
        "UserPortalGatewayUserPortalregisteridcardOPTIONSE68423D1",
        "UserPortalGatewayUserPortalregisteridcardPOSTBA092160",
        "UserPortalGatewayUserPortalregisteridcardEA71D997",
        "UserPortalGatewayUserPortalregisterOPTIONS01BD90E4",
        "UserPortalGatewayUserPortalregisterPOSTED32B081",
        "UserPortalGatewayUserPortalregisterBF491C41",
        "UserPortalGatewayUserPortalresetuserGETFA94F80B",
        "UserPortalGatewayUserPortalresetuserOPTIONS11A86403",
        "UserPortalGatewayUserPortalresetuser08DDCBCA",
        "UserPortalGatewayUserPortalupdateOPTIONS1FED7AD4",
        "UserPortalGatewayUserPortalupdatePOSTBE2945B5",
        "UserPortalGatewayUserPortalupdate3AED6692"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Deployment/Resource"
      }
    },
    "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "DeploymentId": {
          "Ref": "UserPortalGatewayUserPortalDeployment0587A3E15406ee741e4ff60829b888f0c8b5c181"
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "DependsOn": [
        "UserPortalGatewayUserPortalAccount27E32CA6"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/DeploymentStage.prod/Resource"
      }
    },
    "UserPortalGatewayUserPortalregisterBF491C41": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UserPortalGatewayUserPortal1E4ECB13",
            "RootResourceId"
          ]
        },
        "PathPart": "register",
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register/Resource"
      }
    },
    "UserPortalGatewayUserPortalregisterOPTIONS01BD90E4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalregisterBF491C41"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register/OPTIONS/Resource"
      }
    },
    "UserPortalGatewayUserPortalregisterPOSTED32B081": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalregisterBF491C41"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "UserPortalGatewayRole348935C3",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "200",
              "StatusCode": "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                  {
                    "Ref": "UserPortalStatesRegisterStateMachineB7136A77"
                  },
                  "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:states:action/StartSyncExecution"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UserPortalGatewayModelsRegisterUserResponse6B39DB57"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "500"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register/POST/Resource"
      }
    },
    "UserPortalGatewayUserPortalregisteridcardEA71D997": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UserPortalGatewayUserPortal1E4ECB13",
            "RootResourceId"
          ]
        },
        "PathPart": "register-idcard",
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register-idcard/Resource"
      }
    },
    "UserPortalGatewayUserPortalregisteridcardOPTIONSE68423D1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalregisteridcardEA71D997"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register-idcard/OPTIONS/Resource"
      }
    },
    "UserPortalGatewayUserPortalregisteridcardPOSTBA092160": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalregisteridcardEA71D997"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "UserPortalGatewayRole348935C3",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "200",
              "StatusCode": "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                  {
                    "Ref": "UserPortalStatesRegisterIdCardStateMachine83835B73"
                  },
                  "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:states:action/StartSyncExecution"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UserPortalGatewayModelsRegisterUserResponse6B39DB57"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "500"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register-idcard/POST/Resource"
      }
    },
    "UserPortalGatewayUserPortalupdate3AED6692": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UserPortalGatewayUserPortal1E4ECB13",
            "RootResourceId"
          ]
        },
        "PathPart": "update",
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/update/Resource"
      }
    },
    "UserPortalGatewayUserPortalupdateOPTIONS1FED7AD4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalupdate3AED6692"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/update/OPTIONS/Resource"
      }
    },
    "UserPortalGatewayUserPortalupdatePOSTBE2945B5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalupdate3AED6692"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "UserPortalGatewayRole348935C3",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "200",
              "StatusCode": "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                  {
                    "Ref": "UserPortalStatesUpdateStateMachineC5A4EA2D"
                  },
                  "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:states:action/StartSyncExecution"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UserPortalGatewayModelsUpdateUserResponse9EB11910"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "500"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/update/POST/Resource"
      }
    },
    "UserPortalGatewayUserPortalauth5BE56259": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UserPortalGatewayUserPortal1E4ECB13",
            "RootResourceId"
          ]
        },
        "PathPart": "auth",
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/auth/Resource"
      }
    },
    "UserPortalGatewayUserPortalauthOPTIONS37D1C955": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalauth5BE56259"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/auth/OPTIONS/Resource"
      }
    },
    "UserPortalGatewayUserPortalauthPOSTF9F22DE9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalauth5BE56259"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "UserPortalGatewayRole348935C3",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "200",
              "StatusCode": "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "$input.json('$')"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                  {
                    "Ref": "UserPortalStatesAuthStateMachine89B3C1FA"
                  },
                  "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                ]
              ]
            }
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:states:action/StartSyncExecution"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UserPortalGatewayModelsAuthenticateUserResponse955C723F"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "500"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/auth/POST/Resource"
      }
    },
    "UserPortalGatewayUserPortalresetuser08DDCBCA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UserPortalGatewayUserPortal1E4ECB13",
            "RootResourceId"
          ]
        },
        "PathPart": "reset-user",
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/Resource"
      }
    },
    "UserPortalGatewayUserPortalresetuserOPTIONS11A86403": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalresetuser08DDCBCA"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Credentials": "'true'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/OPTIONS/Resource"
      }
    },
    "UserPortalGatewayUserPortalresetuserGETApiPermissionRivProdUserPortalGatewayUserPortal50FAEFC0GETresetuserF1DFC08D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UserPortalFunctionsResetUserLambdaFunction42DCB7C0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:182596642029:",
              {
                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
              },
              "/",
              {
                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
              },
              "/GET/reset-user"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/GET/ApiPermission.RivProdUserPortalGatewayUserPortal50FAEFC0.GET..reset-user"
      }
    },
    "UserPortalGatewayUserPortalresetuserGETApiPermissionTestRivProdUserPortalGatewayUserPortal50FAEFC0GETresetuser4F0F7109": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UserPortalFunctionsResetUserLambdaFunction42DCB7C0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:182596642029:",
              {
                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
              },
              "/test-invoke-stage/GET/reset-user"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/GET/ApiPermission.Test.RivProdUserPortalGatewayUserPortal50FAEFC0.GET..reset-user"
      }
    },
    "UserPortalGatewayUserPortalresetuserGETFA94F80B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "UserPortalGatewayUserPortalresetuser08DDCBCA"
        },
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "SelectionPattern": "200",
              "StatusCode": "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "SelectionPattern": "500",
              "StatusCode": "500"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsResetUserLambdaFunction42DCB7C0",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "UserPortalGatewayModelsAuthenticateUserResponse955C723F"
              }
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          },
          {
            "ResponseModels": {
              "application/json": "Error"
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "500"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/GET/Resource"
      }
    },
    "UserPortalGatewayModelsRegisterUserRequest1C8965E9": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Enroll a new user within the system.",
        "Name": "RegisterUserRequest",
        "Schema": {
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "Image": {
              "description": "utf8(base64( image ))",
              "type": "string"
            },
            "Properties": {
              "description": "An arbitrary property bag.",
              "type": "object"
            }
          },
          "required": [
            "UserId",
            "Image",
            "Properties"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/RegisterUserRequest/Resource"
      }
    },
    "UserPortalGatewayModelsUpdateUserRequest17A1D07F": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Update an existing users profile.",
        "Name": "UpdateUserRequest",
        "Schema": {
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "Image": {
              "description": "utf8(base64( image ))",
              "type": "string"
            },
            "Properties": {
              "description": "An arbitrary property bag.",
              "type": "object"
            }
          },
          "required": [
            "UserId",
            "Image",
            "Properties"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/UpdateUserRequest/Resource"
      }
    },
    "UserPortalGatewayModelsRegisterIdCardRequest233A1A2C": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Registers a new user with a valid id card.",
        "Name": "RegisterWithIdCardRequest",
        "Schema": {
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "Image": {
              "description": "utf8(base64( image ))",
              "type": "string"
            },
            "IdCard": {
              "description": "utf8(base64( image ))",
              "type": "string"
            },
            "Properties": {
              "description": "An arbitrary property bag.",
              "type": "object"
            }
          },
          "required": [
            "UserId",
            "Image",
            "IdCard",
            "Properties"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/RegisterIdCardRequest/Resource"
      }
    },
    "UserPortalGatewayModelsAuthenticateRequestFB958DEC": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Verifies the caller matches their onfile photo",
        "Name": "AuthenticateUserRequest",
        "Schema": {
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "Image": {
              "description": "utf8(base64( image ))",
              "type": "string"
            }
          },
          "required": [
            "UserId",
            "Image"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/AuthenticateRequest/Resource"
      }
    },
    "UserPortalGatewayModelsRegisterUserResponse6B39DB57": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Output from the Register operation.",
        "Name": "RegisterUserResponse",
        "Schema": {
          "description": "The response from a register user flow.",
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "ImageId": {
              "description": "Internal identifier for the user.",
              "type": "string"
            },
            "Status": {
              "description": "Outcome of the Register operation.",
              "type": "string"
            }
          },
          "required": [
            "UserId",
            "ImageId",
            "Status"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/RegisterUserResponse/Resource"
      }
    },
    "UserPortalGatewayModelsUpdateUserResponse9EB11910": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Output from the Update operation.",
        "Name": "UpdateUserResponse",
        "Schema": {
          "description": "The response from a update user flow.",
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "ImageId": {
              "description": "Internal identifier for the user.",
              "type": "string"
            },
            "Status": {
              "description": "Outcome of the Update operation.",
              "type": "string"
            }
          },
          "required": [
            "UserId",
            "ImageId",
            "Status"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/UpdateUserResponse/Resource"
      }
    },
    "UserPortalGatewayModelsAuthenticateUserResponse955C723F": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "UserPortalGatewayUserPortal1E4ECB13"
        },
        "ContentType": "application/json",
        "Description": "Output from the Authentication operation.",
        "Name": "AuthenticateUserResponse",
        "Schema": {
          "description": "The response from a auth user flow.",
          "properties": {
            "UserId": {
              "description": "Primary identifier for the user.",
              "type": "string"
            },
            "Status": {
              "description": "Outcome of the Authenticate operation.",
              "type": "boolean"
            }
          },
          "required": [
            "UserId",
            "Status"
          ],
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/AuthenticateUserResponse/Resource"
      }
    },
    "UserPortalGatewayRole348935C3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSStepFunctionsFullAccess"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Role/Resource"
      }
    },
    "UserPortalGatewayEndpointAddressA9B0266A": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
              },
              ".execute-api.us-east-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
              },
              "/"
            ]
          ]
        },
        "Name": "/riv/Riv-Prod/userportal/url",
        "Tags": {
          "riv_stack": "Riv-Prod"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/EndpointAddress/Resource"
      }
    },
    "UserPortalStatesRegisterLogGroup0CEA68C4": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/LogGroup/Resource"
      }
    },
    "UserPortalStatesRegisterStateMachineRoleE0C66934": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/StateMachine/Role/Resource"
      }
    },
    "UserPortalStatesRegisterStateMachineRoleDefaultPolicyE95F5992": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalStatesRegisterStateMachineRoleDefaultPolicyE95F5992",
        "Roles": [
          {
            "Ref": "UserPortalStatesRegisterStateMachineRoleE0C66934"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalStatesRegisterStateMachineB7136A77": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalStatesRegisterStateMachineRoleE0C66934",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Search-ExistingFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.search.Payload.TopMatch.Face.ExternalImageId\",\"StringEquals\":\"Special:RIV_NO_FACE_MATCH\",\"Next\":\"Index-FaceInfo\"},{\"Variable\":\"$.search.Payload.TopMatch.Face.IsCallerUser\",\"BooleanEquals\":true,\"Next\":\"Index-FaceInfo\"}],\"Default\":\"UserAlreadyExistsError\"},\"UserAlreadyExistsError\":{\"Type\":\"Fail\",\"Error\":\"UserAlreadyExists\",\"Cause\":\"Cannot register double faces in same collections.\"},\"Index-FaceInfo\":{\"Next\":\"Registration-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Registration-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Registered\"},\"End\":true}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalStatesRegisterLogGroup0CEA68C4",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Register_User",
        "StateMachineType": "EXPRESS",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalStatesRegisterStateMachineRoleDefaultPolicyE95F5992",
        "UserPortalStatesRegisterStateMachineRoleE0C66934"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/StateMachine/Resource"
      }
    },
    "UserPortalStatesRegisterIdCardLogGroup476459F4": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/LogGroup/Resource"
      }
    },
    "UserPortalStatesRegisterIdCardStateMachineRole9B336A52": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/StateMachine/Role/Resource"
      }
    },
    "UserPortalStatesRegisterIdCardStateMachineRoleDefaultPolicyB3AF50CD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalStatesRegisterIdCardStateMachineRoleDefaultPolicyB3AF50CD",
        "Roles": [
          {
            "Ref": "UserPortalStatesRegisterIdCardStateMachineRole9B336A52"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalStatesRegisterIdCardStateMachine83835B73": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalStatesRegisterIdCardStateMachineRole9B336A52",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Search-ExistingFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Or\":[{\"Variable\":\"$.search.Payload.TopMatch.Face.ExternalImageId\",\"StringEquals\":\"Special:RIV_NO_FACE_MATCH\"},{\"Variable\":\"$.search.Payload.TopMatch.Face.IsCallerUser\",\"BooleanEquals\":true}],\"Next\":\"CompareFacesWithIDCard\"}],\"Default\":\"UserAlreadyExistsError\"},\"UserAlreadyExistsError\":{\"Type\":\"Fail\",\"Error\":\"UserAlreadyExists\",\"Cause\":\"Cannot register double faces in same collections.\"},\"CompareFacesWithIDCard\":{\"Next\":\"Check-FaceCompareWithIDCard\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-FaceCompareWithIDCard\":{\"Type\":\"Choice\",\"Choices\":[{\"Or\":[{\"Variable\":\"$.search.Payload.IsMatch\",\"BooleanEquals\":true}],\"Next\":\"Extract-IDCard\"}],\"Default\":\"FaceNotMatchWithIDCardError\"},\"FaceNotMatchWithIDCardError\":{\"Type\":\"Fail\",\"Error\":\"FaceNotMatchWithIDCard\",\"Cause\":\"User face not match with the provided ID Card.\"},\"Extract-IDCard\":{\"Next\":\"Merge-Properties\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.idcard\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Merge-Properties\":{\"Type\":\"Pass\",\"ResultPath\":\"$.inputRequest\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"Image.$\":\"$.inputRequest.Image\",\"Properties.$\":\"$.idcard.Payload.Properties\"},\"OutputPath\":\"$\",\"Next\":\"Index-FaceInfo\"},\"Index-FaceInfo\":{\"Next\":\"Registration-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Registration-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Registered\",\"Properties.$\":\"$.idcard.Payload.Properties\"},\"End\":true}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalStatesRegisterIdCardLogGroup476459F4",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Register_IdCard",
        "StateMachineType": "EXPRESS",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalStatesRegisterIdCardStateMachineRoleDefaultPolicyB3AF50CD",
        "UserPortalStatesRegisterIdCardStateMachineRole9B336A52"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/StateMachine/Resource"
      }
    },
    "UserPortalStatesUpdateLogGroup5970DB72": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/LogGroup/Resource"
      }
    },
    "UserPortalStatesUpdateStateMachineRoleF786B6C4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/StateMachine/Role/Resource"
      }
    },
    "UserPortalStatesUpdateStateMachineRoleDefaultPolicy8C502444": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalStatesUpdateStateMachineRoleDefaultPolicy8C502444",
        "Roles": [
          {
            "Ref": "UserPortalStatesUpdateStateMachineRoleF786B6C4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalStatesUpdateStateMachineC5A4EA2D": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalStatesUpdateStateMachineRoleF786B6C4",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Compare-CachedFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Compare-CachedFaces\":{\"Next\":\"CompareFaces-IsMatches\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.compare\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"CompareFaces-IsMatches\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.IsMatch\",\"BooleanEquals\":true,\"Next\":\"Index-FaceInfo\"}],\"Default\":\"Search-ExistingFaces\"},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.TopMatch.IsCallerUser\",\"BooleanEquals\":false,\"Next\":\"InvalidCredentials\"}],\"Default\":\"Index-FaceInfo\"},\"Index-FaceInfo\":{\"Next\":\"Update-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Update-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Updated\"},\"End\":true},\"InvalidCredentials\":{\"Type\":\"Fail\",\"Error\":\"UserAccessDenied\",\"Cause\":\"The wrong person is in the photo.\"}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalStatesUpdateLogGroup5970DB72",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Update",
        "StateMachineType": "EXPRESS",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalStatesUpdateStateMachineRoleDefaultPolicy8C502444",
        "UserPortalStatesUpdateStateMachineRoleF786B6C4"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/StateMachine/Resource"
      }
    },
    "UserPortalStatesAuthLogGroupA8210BF9": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/LogGroup/Resource"
      }
    },
    "UserPortalStatesAuthStateMachineRoleFF7A818C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/StateMachine/Role/Resource"
      }
    },
    "UserPortalStatesAuthStateMachineRoleDefaultPolicyDB75CC13": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalStatesAuthStateMachineRoleDefaultPolicyDB75CC13",
        "Roles": [
          {
            "Ref": "UserPortalStatesAuthStateMachineRoleFF7A818C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalStatesAuthStateMachine89B3C1FA": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalStatesAuthStateMachineRoleFF7A818C",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Compare-CachedFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Compare-CachedFaces\":{\"Next\":\"CompareFaces-IsMatches\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.compare\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"CompareFaces-IsMatches\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.IsMatch\",\"BooleanEquals\":true,\"Next\":\"Auth-Complete\"}],\"Default\":\"Search-ExistingFaces\"},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.TopMatch.IsCallerUser\",\"BooleanEquals\":false,\"Next\":\"InvalidCredentials\"}],\"Default\":\"Auth-Complete\"},\"Auth-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"Status\":\"Verified\"},\"End\":true},\"InvalidCredentials\":{\"Type\":\"Fail\",\"Error\":\"UserAccessDenied\",\"Cause\":\"The wrong person is in the photo.\"}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalStatesAuthLogGroupA8210BF9",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Auth",
        "StateMachineType": "EXPRESS",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalStatesAuthStateMachineRoleDefaultPolicyDB75CC13",
        "UserPortalStatesAuthStateMachineRoleFF7A818C"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/StateMachine/Resource"
      }
    },
    "UserPortalDebugStatesRegisterLogGroup56211F95": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register/LogGroup/Resource"
      }
    },
    "UserPortalDebugStatesRegisterStateMachineRole3ADB43DD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register/StateMachine/Role/Resource"
      }
    },
    "UserPortalDebugStatesRegisterStateMachineRoleDefaultPolicy37FE9072": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalDebugStatesRegisterStateMachineRoleDefaultPolicy37FE9072",
        "Roles": [
          {
            "Ref": "UserPortalDebugStatesRegisterStateMachineRole3ADB43DD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalDebugStatesRegisterStateMachine0676314A": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalDebugStatesRegisterStateMachineRole3ADB43DD",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Search-ExistingFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.search.Payload.TopMatch.Face.ExternalImageId\",\"StringEquals\":\"Special:RIV_NO_FACE_MATCH\",\"Next\":\"Index-FaceInfo\"},{\"Variable\":\"$.search.Payload.TopMatch.Face.IsCallerUser\",\"BooleanEquals\":true,\"Next\":\"Index-FaceInfo\"}],\"Default\":\"UserAlreadyExistsError\"},\"UserAlreadyExistsError\":{\"Type\":\"Fail\",\"Error\":\"UserAlreadyExists\",\"Cause\":\"Cannot register double faces in same collections.\"},\"Index-FaceInfo\":{\"Next\":\"Registration-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Registration-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Registered\"},\"End\":true}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalDebugStatesRegisterLogGroup56211F95",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Register_User_Debuggable",
        "StateMachineType": "STANDARD",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalDebugStatesRegisterStateMachineRoleDefaultPolicy37FE9072",
        "UserPortalDebugStatesRegisterStateMachineRole3ADB43DD"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register/StateMachine/Resource"
      }
    },
    "UserPortalDebugStatesRegisterIdCardLogGroupC9155A83": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register-IdCard/LogGroup/Resource"
      }
    },
    "UserPortalDebugStatesRegisterIdCardStateMachineRoleA9ED11E2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register-IdCard/StateMachine/Role/Resource"
      }
    },
    "UserPortalDebugStatesRegisterIdCardStateMachineRoleDefaultPolicy76024127": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalDebugStatesRegisterIdCardStateMachineRoleDefaultPolicy76024127",
        "Roles": [
          {
            "Ref": "UserPortalDebugStatesRegisterIdCardStateMachineRoleA9ED11E2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register-IdCard/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalDebugStatesRegisterIdCardStateMachineE7F61A6E": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalDebugStatesRegisterIdCardStateMachineRoleA9ED11E2",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Search-ExistingFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Or\":[{\"Variable\":\"$.search.Payload.TopMatch.Face.ExternalImageId\",\"StringEquals\":\"Special:RIV_NO_FACE_MATCH\"},{\"Variable\":\"$.search.Payload.TopMatch.Face.IsCallerUser\",\"BooleanEquals\":true}],\"Next\":\"CompareFacesWithIDCard\"}],\"Default\":\"UserAlreadyExistsError\"},\"UserAlreadyExistsError\":{\"Type\":\"Fail\",\"Error\":\"UserAlreadyExists\",\"Cause\":\"Cannot register double faces in same collections.\"},\"CompareFacesWithIDCard\":{\"Next\":\"Check-FaceCompareWithIDCard\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-FaceCompareWithIDCard\":{\"Type\":\"Choice\",\"Choices\":[{\"Or\":[{\"Variable\":\"$.search.Payload.IsMatch\",\"BooleanEquals\":true}],\"Next\":\"Extract-IDCard\"}],\"Default\":\"FaceNotMatchWithIDCardError\"},\"FaceNotMatchWithIDCardError\":{\"Type\":\"Fail\",\"Error\":\"FaceNotMatchWithIDCard\",\"Cause\":\"User face not match with the provided ID Card.\"},\"Extract-IDCard\":{\"Next\":\"Merge-Properties\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.idcard\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Merge-Properties\":{\"Type\":\"Pass\",\"ResultPath\":\"$.inputRequest\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"Image.$\":\"$.inputRequest.Image\",\"Properties.$\":\"$.idcard.Payload.Properties\"},\"OutputPath\":\"$\",\"Next\":\"Index-FaceInfo\"},\"Index-FaceInfo\":{\"Next\":\"Registration-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Registration-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Registered\",\"Properties.$\":\"$.idcard.Payload.Properties\"},\"End\":true}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalDebugStatesRegisterIdCardLogGroupC9155A83",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Register_IdCard_Debuggable",
        "StateMachineType": "STANDARD",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalDebugStatesRegisterIdCardStateMachineRoleDefaultPolicy76024127",
        "UserPortalDebugStatesRegisterIdCardStateMachineRoleA9ED11E2"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Register-IdCard/StateMachine/Resource"
      }
    },
    "UserPortalDebugStatesUpdateLogGroup3C8805C1": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Update/LogGroup/Resource"
      }
    },
    "UserPortalDebugStatesUpdateStateMachineRoleA286338C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Update/StateMachine/Role/Resource"
      }
    },
    "UserPortalDebugStatesUpdateStateMachineRoleDefaultPolicyAEE11FD9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalDebugStatesUpdateStateMachineRoleDefaultPolicyAEE11FD9",
        "Roles": [
          {
            "Ref": "UserPortalDebugStatesUpdateStateMachineRoleA286338C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Update/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalDebugStatesUpdateStateMachineA004C977": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalDebugStatesUpdateStateMachineRoleA286338C",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Compare-CachedFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Compare-CachedFaces\":{\"Next\":\"CompareFaces-IsMatches\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.compare\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"CompareFaces-IsMatches\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.IsMatch\",\"BooleanEquals\":true,\"Next\":\"Index-FaceInfo\"}],\"Default\":\"Search-ExistingFaces\"},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.TopMatch.IsCallerUser\",\"BooleanEquals\":false,\"Next\":\"InvalidCredentials\"}],\"Default\":\"Index-FaceInfo\"},\"Index-FaceInfo\":{\"Next\":\"Update-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Update-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Updated\"},\"End\":true},\"InvalidCredentials\":{\"Type\":\"Fail\",\"Error\":\"UserAccessDenied\",\"Cause\":\"The wrong person is in the photo.\"}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalDebugStatesUpdateLogGroup3C8805C1",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Update_Debuggable",
        "StateMachineType": "STANDARD",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalDebugStatesUpdateStateMachineRoleDefaultPolicyAEE11FD9",
        "UserPortalDebugStatesUpdateStateMachineRoleA286338C"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Update/StateMachine/Resource"
      }
    },
    "UserPortalDebugStatesAuthLogGroup1361D4DA": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Auth/LogGroup/Resource"
      }
    },
    "UserPortalDebugStatesAuthStateMachineRoleA3D96154": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Auth/StateMachine/Role/Resource"
      }
    },
    "UserPortalDebugStatesAuthStateMachineRoleDefaultPolicy306E201F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "UserPortalDebugStatesAuthStateMachineRoleDefaultPolicy306E201F",
        "Roles": [
          {
            "Ref": "UserPortalDebugStatesAuthStateMachineRoleA3D96154"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Auth/StateMachine/Role/DefaultPolicy/Resource"
      }
    },
    "UserPortalDebugStatesAuthStateMachineF609D75E": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "UserPortalDebugStatesAuthStateMachineRoleA3D96154",
            "Arn"
          ]
        },
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Compare-CachedFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Compare-CachedFaces\":{\"Next\":\"CompareFaces-IsMatches\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.compare\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"CompareFaces-IsMatches\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.IsMatch\",\"BooleanEquals\":true,\"Next\":\"Auth-Complete\"}],\"Default\":\"Search-ExistingFaces\"},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
              {
                "Fn::GetAtt": [
                  "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                  "Arn"
                ]
              },
              "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.TopMatch.IsCallerUser\",\"BooleanEquals\":false,\"Next\":\"InvalidCredentials\"}],\"Default\":\"Auth-Complete\"},\"Auth-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"Status\":\"Verified\"},\"End\":true},\"InvalidCredentials\":{\"Type\":\"Fail\",\"Error\":\"UserAccessDenied\",\"Cause\":\"The wrong person is in the photo.\"}},\"TimeoutSeconds\":30}"
            ]
          ]
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "UserPortalDebugStatesAuthLogGroup1361D4DA",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "IncludeExecutionData": true,
          "Level": "ALL"
        },
        "StateMachineName": "Riv-Prod-UserPortal-Auth_Debuggable",
        "StateMachineType": "STANDARD",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "TracingConfiguration": {
          "Enabled": true
        }
      },
      "DependsOn": [
        "UserPortalDebugStatesAuthStateMachineRoleDefaultPolicy306E201F",
        "UserPortalDebugStatesAuthStateMachineRoleA3D96154"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/UserPortal/DebugStates/Auth/StateMachine/Resource"
      }
    },
    "RekognitionSetupCollection0RekognitionCollection52D63172": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": "{\"action\":\"createCollection\",\"service\":\"Rekognition\",\"parameters\":{\"CollectionId\":\"Riv-Prod-0\"},\"physicalResourceId\":{\"id\":\"RekogitionCollection:Riv-Prod-0\"}}",
        "Delete": "{\"action\":\"deleteCollection\",\"service\":\"Rekognition\",\"parameters\":{\"CollectionId\":\"Riv-Prod-0\"},\"physicalResourceId\":{\"id\":\"RekogitionCollection:Riv-Prod-0\"}}",
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "RekognitionSetupCollection0RekognitionCollectionCustomResourcePolicyC35EF824"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RekognitionSetup/Collection_0/RekognitionCollection/Resource/Default"
      }
    },
    "RekognitionSetupCollection0RekognitionCollectionCustomResourcePolicyC35EF824": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "rekognition:CreateCollection",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "rekognition:DeleteCollection",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RekognitionSetupCollection0RekognitionCollectionCustomResourcePolicyC35EF824",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RekognitionSetup/Collection_0/RekognitionCollection/CustomResourcePolicy/Resource"
      }
    },
    "RekognitionSetupPartitionCountParameter4827825C": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "1",
        "Description": "Generated from /Users/vkachha/Documents/RIVPROJECT/fork1/rekognition-identity-verification/infra/services/rekognition/topology.py",
        "Name": "/riv/Riv-Prod/rekognition/partition-count",
        "Tags": {
          "riv_stack": "Riv-Prod"
        },
        "Tier": "Standard"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RekognitionSetup/PartitionCountParameter/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersasset6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50S3Bucket04AFB68D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50S3VersionKeyC247374B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50S3VersionKeyC247374B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "RIVWebAPPRIVWebAppRepo7790C97E": {
      "Type": "AWS::CodeCommit::Repository",
      "Properties": {
        "RepositoryName": "Riv-Prod-Repo",
        "Code": {
          "S3": {
            "Bucket": {
              "Ref": "AssetParametersasset4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fdS3Bucket04AFB68D"
            },
            "Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fdS3VersionKeyC247374B"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fdS3VersionKeyC247374B"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          }
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App-Repo/Resource"
      }
    },
    "RIVWebAPPRIVWebAppRole65847576": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "amplify.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/Role/Resource"
      }
    },
    "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RIVWebAPPRIVWebAppRepo7790C97E",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D",
        "Roles": [
          {
            "Ref": "RIVWebAPPRIVWebAppRole65847576"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/Role/DefaultPolicy/Resource"
      }
    },
    "RIVWebAPPRIVWebApp70A84C14": {
      "Type": "AWS::Amplify::App",
      "Properties": {
        "Name": "Riv-Prod",
        "AutoBranchCreationConfig": {
          "AutoBranchCreationPatterns": [
            "main/*",
            "prod/*"
          ],
          "BasicAuthConfig": {
            "EnableBasicAuth": false
          },
          "EnableAutoBranchCreation": true,
          "EnableAutoBuild": true,
          "EnablePullRequestPreview": true
        },
        "BasicAuthConfig": {
          "EnableBasicAuth": false
        },
        "CustomRules": [
          {
            "Source": "</^((?!\\.(css|gif|ico|jpg|js|png|txt|svg|woff|ttf)$).)*$/>",
            "Status": "200",
            "Target": "/index.html"
          }
        ],
        "EnvironmentVariables": [
          {
            "Name": "REACT_APP_ENV_API_URL",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                  },
                  "/"
                ]
              ]
            }
          }
        ],
        "IAMServiceRole": {
          "Fn::GetAtt": [
            "RIVWebAPPRIVWebAppRole65847576",
            "Arn"
          ]
        },
        "Repository": {
          "Fn::GetAtt": [
            "RIVWebAPPRIVWebAppRepo7790C97E",
            "CloneUrlHttp"
          ]
        },
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/Resource"
      }
    },
    "RIVWebAPPRIVWebAppmainE864ED78": {
      "Type": "AWS::Amplify::Branch",
      "Properties": {
        "AppId": {
          "Fn::GetAtt": [
            "RIVWebAPPRIVWebApp70A84C14",
            "AppId"
          ]
        },
        "BranchName": "main",
        "EnableAutoBuild": true,
        "EnablePullRequestPreview": true,
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/main/Resource"
      }
    },
    "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"action\":\"startJob\",\"service\":\"Amplify\",\"parameters\":{\"appId\":\"",
              {
                "Fn::GetAtt": [
                  "RIVWebAPPRIVWebApp70A84C14",
                  "AppId"
                ]
              },
              "\",\"branchName\":\"main\",\"jobType\":\"RELEASE\",\"jobReason\":\"Auto Start build\"},\"physicalResourceId\":{\"id\":\"app-build-trigger\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "RIVWebAPPRIVWebAppRepo7790C97E",
        "RIVWebAPPRIVWebAppmainE864ED78",
        "RIVWebAPPRIVWebApp70A84C14",
        "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D",
        "RIVWebAPPRIVWebAppRole65847576",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPTrigger/RIV-Web-App-Trigger-Build/Resource/Default"
      }
    },
    "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "amplify:StartJob",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "DependsOn": [
        "RIVWebAPPRIVWebAppRepo7790C97E",
        "RIVWebAPPRIVWebAppmainE864ED78",
        "RIVWebAPPRIVWebApp70A84C14",
        "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D",
        "RIVWebAPPRIVWebAppRole65847576"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPTrigger/RIV-Web-App-Trigger-Build/CustomResourcePolicy/Resource"
      }
    },
    "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSCloudFormationFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AdministratorAccess-Amplify"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ]
      },
      "DependsOn": [
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Lambda/ServiceRole/Resource"
      }
    },
    "RIVWebAPPStatusRIVWebAppLambdaServiceRoleDefaultPolicy14666126": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RIVWebAPPStatusRIVWebAppLambdaServiceRoleDefaultPolicy14666126",
        "Roles": [
          {
            "Ref": "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD"
          }
        ]
      },
      "DependsOn": [
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Lambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "RIVWebAPPStatusRIVWebAppLambda32B2270A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import json\nimport logging\nimport boto3\nfrom botocore.exceptions import ClientError\n\nclient = boto3.client('amplify')\n\n\ndef lambda_handler(event, context):\n    # apps = client.list_apps()\n    appName, appId = getApp(event['app'])\n    if(appName is not None):\n        branch = getBranch(appId, event['branch'])\n        if(branch is not None):\n            i = False\n            jobId = getJob(appId,branch)\n            if(jobId is not None):\n                while(i == False):\n                    job_status = client.get_job(\n                        appId=appId,\n                        branchName=branch,\n                        jobId=jobId\n                    )\n                    status = job_status['job']['summary']['status']\n                    if (status == 'FAILED' or status == 'SUCCEED' or status == 'CANCELLED'):\n                        i = True\n                        break\n    return {\n        \"status\":\"Amplify App deployed Successfully.\"\n    }\n    \n\n\ndef getApp(name):\n    apps = client.list_apps()\n    appName = None\n    appId = None\n    for sub in apps['apps']:\n        if sub['name'] == name:\n            appName = sub['name']\n            appId = sub['appId']\n            # deleteAPP = client.delete_app(\n            #     appId=sub['appId']\n            # )\n            break\n    return appName, appId\n\n\ndef getBranch(appId, name):\n    response = client.list_branches(appId=appId)\n    branchName = None\n    for sub in response['branches']:\n        if sub['branchName'] == name:\n            branchName = sub['branchName']\n            break\n    return branchName\n\n\ndef getJob(appId, branch):\n    jobs = client.list_jobs(\n        appId=appId,\n        branchName=branch,\n    )\n    jobId = None\n    for sub in jobs['jobSummaries']:\n        status = sub['status']\n        if (status == 'PENDING' or status == 'PROVISIONING' or status == 'RUNNING' or status == 'CANCELLING'):\n            jobId = sub['jobId']\n            break\n    return jobId\n\n\n\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD",
            "Arn"
          ]
        },
        "FunctionName": "Riv-Prod-webapp-deployment",
        "Handler": "index.lambda_handler",
        "Runtime": "python3.9",
        "Tags": [
          {
            "Key": "riv_stack",
            "Value": "Riv-Prod"
          }
        ],
        "Timeout": 600,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "RIVWebAPPStatusRIVWebAppLambdaServiceRoleDefaultPolicy14666126",
        "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Lambda/Resource"
      }
    },
    "RIVWebAPPStatusRIVWebAppDeployStatusDCE68B20": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"action\":\"invoke\",\"service\":\"Lambda\",\"parameters\":{\"FunctionName\":\"",
              {
                "Ref": "RIVWebAPPStatusRIVWebAppLambda32B2270A"
              },
              "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"app\\\":\\\"Riv-Prod\\\",\\\"branch\\\":\\\"main\\\"}\"},\"physicalResourceId\":{\"id\":\"Riv-Prod-webapp-stack\"}}"
            ]
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"action\":\"invoke\",\"service\":\"Lambda\",\"parameters\":{\"FunctionName\":\"",
              {
                "Ref": "RIVWebAPPStatusRIVWebAppLambda32B2270A"
              },
              "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"app\\\":\\\"Riv-Prod\\\",\\\"branch\\\":\\\"main\\\"}\"},\"physicalResourceId\":{\"id\":\"Riv-Prod-webapp-stack\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "RIVWebAPPStatusRIVWebAppDeployStatusCustomResourcePolicyD077C86F",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Deploy-Status/Resource/Default"
      }
    },
    "RIVWebAPPStatusRIVWebAppDeployStatusCustomResourcePolicyD077C86F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RIVWebAPPStatusRIVWebAppLambda32B2270A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RIVWebAPPStatusRIVWebAppDeployStatusCustomResourcePolicyD077C86F",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "DependsOn": [
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
        "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
      ],
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Deploy-Status/CustomResourcePolicy/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21U25LaMAz9Ft6Nd9l9ad8K7GWYgTaFDq+McbTgEl/qyzKZTP69suMk0OlLpKNIytGRJk/0+QttZhN2dVNeXqaVONJm5xm/EAwdGuBPtNkbTpYfal8sSWHFJ/OwC0cFPgZHb6uDh1/sWMEYH2Nz5zQXzAuthmRShGMl+NjidVVE8535d/zIldURrZQHiwk3IWSS0dwj17ME5ckOeLDC1+9WB5Mo3AVyAc7yqkqjhfK5Uw9bUtaKSV2iAsMYyWmJe6bNIvBLRzN7nSk0jlCP4Yw7sGAuViuHLbURScbOSc+x9haiHo5bYXqtbjE2+4PNfgYIiV/npOfY7Aa2RDBJm63uxkl2TOxzKiaPJaPNW1C8/+rgr1kNdg/W5Rf/4gKsFC6hnVCnCrweiqNyB+YceEfn0RBmxKnbBLIC5+dGJGKjO+dcB9zOC5hK12m1GL1BeJ6n7saSg6U6WA5R6wHknp2/AX/WZQxlb6NLqBKODpJ0Ml69RfoFs0wCXlwarQcokT6h7mt9Gs6r97Hcg/nIE7uDZ+7i6DpJulKf+gL3CbRZnrVAWm9MVKRAdeJEHjZ4yEL1gw24JRxJci2l8FEyo53w2tbdhD1qCZOmEh+oapTQJIYLyxQ/t+3/VUn7iBLi1PHFj+BN8IQH57U82JyGe7u6ZYqNXe5gS2ZTVpkzo4+Tb/k/8hBtZpRfNpHUwKiocRHq4Zl+pbPHyW8nxNTi0oUEuu3sX4c8+puaBAAA"
      },
      "Metadata": {
        "aws:cdk:path": "Riv-Prod/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "UserPortalGatewayUserPortalEndpoint5EC0A06F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "UserPortalGatewayUserPortal1E4ECB13"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
            },
            "/"
          ]
        ]
      }
    },
    "RIVWebAPPStatusRIVWebAppURL86E89525": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://main.",
            {
              "Fn::GetAtt": [
                "RIVWebAPPRIVWebApp70A84C14",
                "AppId"
              ]
            },
            ".amplifyapp.com"
          ]
        ]
      },
      "Export": {
        "Name": "RIV-Web-App-URL"
      }
    }
  },
  "Parameters": {
    "AssetParametersdd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31S3BucketA3FD501C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"dd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31\"",
      "Default": "aws-ml-blog"
    },
    "AssetParametersdd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31S3VersionKey20A7BC5A": {
      "Type": "String",
      "Description": "S3 key for asset version \"dd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.dd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31.zip"
    },
    "AssetParametersdd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31ArtifactHash18D45C42": {
      "Type": "String",
      "Description": "Artifact hash for asset \"dd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31\"",
      "Default": "dd76b875474decdeb954e746f00a191eb0770e9bacd15239d5d622c99309ba31"
    },
    "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3BucketC42EA4FE": {
      "Type": "String",
      "Description": "S3 bucket for asset \"35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fS3VersionKeyCE7E7CBE": {
      "Type": "String",
      "Description": "S3 key for asset version \"35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f.zip"
    },
    "AssetParameters35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77fArtifactHash12A26DCA": {
      "Type": "String",
      "Description": "Artifact hash for asset \"35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f\"",
      "Default": "35c0cf78e4252d781862ece9d37fe231dfe98746e05bedfc40eb5e91cfabf77f"
    },
    "AssetParameters2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4S3Bucket25D82D46": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameters2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4S3VersionKeyC8B1DE28": {
      "Type": "String",
      "Description": "S3 key for asset version \"2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4.zip"
    },
    "AssetParameters2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4ArtifactHashBAFC36CC": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4\"",
      "Default": "2a67f35b616579eacc88f5492ea815e08a42f919b0a14246a0490b81cd0d14d4"
    },
    "AssetParameterscc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477S3Bucket434C1646": {
      "Type": "String",
      "Description": "S3 bucket for asset \"cc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameterscc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477S3VersionKey892CE8B5": {
      "Type": "String",
      "Description": "S3 key for asset version \"cc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.cc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477.zip"
    },
    "AssetParameterscc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477ArtifactHash2BA58D73": {
      "Type": "String",
      "Description": "Artifact hash for asset \"cc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477\"",
      "Default": "cc647f484b5efc9ae7c0ac4e595dfc101b867a102aa454016040b5e9007d3477"
    },
    "AssetParametersa2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2dS3BucketD72F6A4A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2d\"",
      "Default": "aws-ml-blog"
    },
    "AssetParametersa2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2dS3VersionKeyF031342E": {
      "Type": "String",
      "Description": "S3 key for asset version \"a2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2d\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.a2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2d.zip"
    },
    "AssetParametersa2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2dArtifactHashC48B385A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2d\"",
      "Default": "a2316c9a0b42ad2f628fe1436056d0a1842f7ab4f37be78d48bf62d35f027d2d"
    },
    "AssetParametersa99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246bS3BucketD72F6A4A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246b\"",
      "Default": "aws-ml-blog"
    },
    "AssetParametersa99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246bS3VersionKeyF031342E": {
      "Type": "String",
      "Description": "S3 key for asset version \"99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246b\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246b.zip"
    },
    "AssetParametersa99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246bArtifactHashC48B385A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246b\"",
      "Default": "99f44f6d3211cdfeaaaadbab79b10ed5e17fbf33f80b40f7893227c8cade246b"
    },
    "AssetParametersea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20S3Bucket05917254": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20\"",
      "Default": "aws-ml-blog"
    },
    "AssetParametersea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20S3VersionKeyDF56680A": {
      "Type": "String",
      "Description": "S3 key for asset version \"ea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.ea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20.zip"
    },
    "AssetParametersea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20ArtifactHash6F68CAE1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20\"",
      "Default": "ea01e40e75dc7042432eb2a5b50b0d769426490118c63c366ad2bfb3c8d86c20"
    },
    "AssetParameters11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2S3Bucket04AFB68D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameters11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2S3VersionKeyC247374B": {
      "Type": "String",
      "Description": "S3 key for asset version \"11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2.zip"
    },
    "AssetParameters11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2ArtifactHashF319B5BD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2\"",
      "Default": "11d371859e49f3b1a49896583254890801a40beada56e4c84409a179a221e2e2"
    },
    "AssetParameters454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0cS3Bucket04AFB68D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0c\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameters454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0cS3VersionKeyC247374B": {
      "Type": "String",
      "Description": "S3 key for asset version \"454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0c\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0c.zip"
    },
    "AssetParameters454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0cArtifactHashF319B5BD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0c\"",
      "Default": "454ca9daf37760affcb60bf4daade30bdd55f0c34d4764bb883b544fa1ad8f0c"
    },
    "AssetParametersasset6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50S3Bucket04AFB68D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameters6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50S3VersionKeyC247374B": {
      "Type": "String",
      "Description": "S3 key for asset version \"6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50.zip"
    },
    "AssetParameters6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50ArtifactHashF319B5BD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50\"",
      "Default": "6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50"
    },
    "AssetParametersasset4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fdS3Bucket04AFB68D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fd\"",
      "Default": "aws-ml-blog"
    },
    "AssetParameters4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fdS3VersionKeyC247374B": {
      "Type": "String",
      "Description": "S3 key for asset version \"4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fd\"",
      "Default": "artifacts/rekognition-identity-verification-solution/||asset.4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fd.zip"
    },
    "AssetParameters4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fdArtifactHashF319B5BD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fd\"",
      "Default": "4a047c3216a863f10946ec94172e480e3f28a7976e891113bb075860017b21fd"
    }
  }
}