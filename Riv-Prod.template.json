{
    "Resources": {
        "RivProdNetwork4997B0D7": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/Resource"
            }
        },
        "RivProdNetworkDefaultSubnet1SubnetD8510F65": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "AvailabilityZone": "us-east-1a",
                "CidrBlock": "10.0.0.0/18",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Default"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/Subnet"
            }
        },
        "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/RouteTable"
            }
        },
        "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
                },
                "SubnetId": {
                    "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/RouteTableAssociation"
            }
        },
        "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "RivProdNetworkPublicSubnet1NATGatewayEA1AB717"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet1/DefaultRoute"
            }
        },
        "RivProdNetworkDefaultSubnet2Subnet56EB9307": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "AvailabilityZone": "us-east-1b",
                "CidrBlock": "10.0.64.0/18",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Default"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Private"
                    },
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/Subnet"
            }
        },
        "RivProdNetworkDefaultSubnet2RouteTable502AB6BB": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/RouteTable"
            }
        },
        "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
                },
                "SubnetId": {
                    "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/RouteTableAssociation"
            }
        },
        "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "RivProdNetworkPublicSubnet1NATGatewayEA1AB717"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/DefaultSubnet2/DefaultRoute"
            }
        },
        "RivProdNetworkPublicSubnet1SubnetA0CF7DD1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "AvailabilityZone": "us-east-1a",
                "CidrBlock": "10.0.128.0/19",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Public"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/Subnet"
            }
        },
        "RivProdNetworkPublicSubnet1RouteTable6E75BCD0": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/RouteTable"
            }
        },
        "RivProdNetworkPublicSubnet1RouteTableAssociation44ABA0EA": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
                },
                "SubnetId": {
                    "Ref": "RivProdNetworkPublicSubnet1SubnetA0CF7DD1"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/RouteTableAssociation"
            }
        },
        "RivProdNetworkPublicSubnet1DefaultRoute30B871D4": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "RivProdNetworkIGWDFD242C8"
                }
            },
            "DependsOn": [
                "RivProdNetworkVPCGWE2BF3263"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/DefaultRoute"
            }
        },
        "RivProdNetworkPublicSubnet1EIP8917BFC9": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/EIP"
            }
        },
        "RivProdNetworkPublicSubnet1NATGatewayEA1AB717": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "SubnetId": {
                    "Ref": "RivProdNetworkPublicSubnet1SubnetA0CF7DD1"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "RivProdNetworkPublicSubnet1EIP8917BFC9",
                        "AllocationId"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "DependsOn": [
                "RivProdNetworkPublicSubnet1DefaultRoute30B871D4",
                "RivProdNetworkPublicSubnet1RouteTableAssociation44ABA0EA"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet1/NATGateway"
            }
        },
        "RivProdNetworkPublicSubnet2Subnet376BC495": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "AvailabilityZone": "us-east-1b",
                "CidrBlock": "10.0.160.0/19",
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Public"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Public"
                    },
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet2"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/Subnet"
            }
        },
        "RivProdNetworkPublicSubnet2RouteTableC3C60287": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/PublicSubnet2"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/RouteTable"
            }
        },
        "RivProdNetworkPublicSubnet2RouteTableAssociation06CC3CEF": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
                },
                "SubnetId": {
                    "Ref": "RivProdNetworkPublicSubnet2Subnet376BC495"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/RouteTableAssociation"
            }
        },
        "RivProdNetworkPublicSubnet2DefaultRoute144ABE3F": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "RivProdNetworkIGWDFD242C8"
                }
            },
            "DependsOn": [
                "RivProdNetworkVPCGWE2BF3263"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/PublicSubnet2/DefaultRoute"
            }
        },
        "RivProdNetworkReservedSubnet1SubnetA8B507FA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "AvailabilityZone": "us-east-1a",
                "CidrBlock": "10.0.192.0/19",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Reserved"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Isolated"
                    },
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1/Subnet"
            }
        },
        "RivProdNetworkReservedSubnet1RouteTableC40A63E7": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1/RouteTable"
            }
        },
        "RivProdNetworkReservedSubnet1RouteTableAssociation1B794BB0": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkReservedSubnet1RouteTableC40A63E7"
                },
                "SubnetId": {
                    "Ref": "RivProdNetworkReservedSubnet1SubnetA8B507FA"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet1/RouteTableAssociation"
            }
        },
        "RivProdNetworkReservedSubnet2Subnet7E0F9E9F": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "AvailabilityZone": "us-east-1b",
                "CidrBlock": "10.0.224.0/19",
                "MapPublicIpOnLaunch": false,
                "Tags": [
                    {
                        "Key": "aws-cdk:subnet-name",
                        "Value": "Reserved"
                    },
                    {
                        "Key": "aws-cdk:subnet-type",
                        "Value": "Isolated"
                    },
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2/Subnet"
            }
        },
        "RivProdNetworkReservedSubnet2RouteTableF3A1346C": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2/RouteTable"
            }
        },
        "RivProdNetworkReservedSubnet2RouteTableAssociation2B3B9555": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RivProdNetworkReservedSubnet2RouteTableF3A1346C"
                },
                "SubnetId": {
                    "Ref": "RivProdNetworkReservedSubnet2Subnet7E0F9E9F"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/ReservedSubnet2/RouteTableAssociation"
            }
        },
        "RivProdNetworkIGWDFD242C8": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Riv-Prod/Riv-Prod/Network"
                    },
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/IGW"
            }
        },
        "RivProdNetworkVPCGWE2BF3263": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "InternetGatewayId": {
                    "Ref": "RivProdNetworkIGWDFD242C8"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Network/VPCGW"
            }
        },
        "RivProdEndpointsEndpointSecurity527AA3A4": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for AWS Resources in isolated subnet",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow all outbound traffic by default",
                        "IpProtocol": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "from 0.0.0.0/0:Any source",
                        "IpProtocol": "-1"
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Endpoints/EndpointSecurity/Resource"
            }
        },
        "RivProdEndpointss36F2E44E7": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".s3"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "RouteTableIds": [
                    {
                        "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
                    },
                    {
                        "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
                    },
                    {
                        "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
                    },
                    {
                        "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
                    },
                    {
                        "Ref": "RivProdNetworkReservedSubnet1RouteTableC40A63E7"
                    },
                    {
                        "Ref": "RivProdNetworkReservedSubnet2RouteTableF3A1346C"
                    }
                ],
                "VpcEndpointType": "Gateway"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Endpoints/s3/Resource"
            }
        },
        "RivProdEndpointsdynamodbE5D9CE28": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".dynamodb"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                },
                "RouteTableIds": [
                    {
                        "Ref": "RivProdNetworkDefaultSubnet1RouteTableCFDCEE83"
                    },
                    {
                        "Ref": "RivProdNetworkDefaultSubnet2RouteTable502AB6BB"
                    },
                    {
                        "Ref": "RivProdNetworkPublicSubnet1RouteTable6E75BCD0"
                    },
                    {
                        "Ref": "RivProdNetworkPublicSubnet2RouteTableC3C60287"
                    },
                    {
                        "Ref": "RivProdNetworkReservedSubnet1RouteTableC40A63E7"
                    },
                    {
                        "Ref": "RivProdNetworkReservedSubnet2RouteTableF3A1346C"
                    }
                ],
                "VpcEndpointType": "Gateway"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/Riv-Prod/Endpoints/dynamodb/Resource"
            }
        },
        "SecurityGroupDD263621": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Default-SG for Riv-Prod RIV stack",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow all outbound traffic by default",
                        "IpProtocol": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Grant icmp from anywhere",
                        "FromPort": -1,
                        "IpProtocol": "icmp",
                        "ToPort": -1
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "VpcId": {
                    "Ref": "RivProdNetwork4997B0D7"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/SecurityGroup/Resource"
            }
        },
        "SharedStorageMetadataFaceTable609BE09F": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "KeySchema": [
                    {
                        "AttributeName": "PartitionKey",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "SortKey",
                        "KeyType": "RANGE"
                    }
                ],
                "AttributeDefinitions": [
                    {
                        "AttributeName": "PartitionKey",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "SortKey",
                        "AttributeType": "S"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "PointInTimeRecoverySpecification": {
                    "PointInTimeRecoveryEnabled": true
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/SharedStorage/Metadata/FaceTable/Resource"
            }
        },
        "SharedStorageImagesImageBucket7DE5900F": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Retain",
            "DeletionPolicy": "Retain",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/SharedStorage/Images/ImageBucket/Resource"
            }
        },
        "UserPortalFunctionsCompareFacesRoleCDFF36AC": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalCompareFaces for the CompareFaces component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/Role/Resource"
            }
        },
        "UserPortalFunctionsCompareFacesRoleDefaultPolicy0498D433": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:Query",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:DescribeTable"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageMetadataFaceTable609BE09F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsCompareFacesRoleDefaultPolicy0498D433",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsCompareFacesRoleCDFF36AC"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/ad809e6dbc90675ecfaafcce81a959cb15f0d641b17a241b722393e5407d57a6.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsCompareFacesRoleCDFF36AC",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for CompareFaces",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsCompareFacesSharedDepsBB15B7E8"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsCompareFacesRoleDefaultPolicy0498D433",
                "UserPortalFunctionsCompareFacesRoleCDFF36AC"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/ad809e6dbc90675ecfaafcce81a959cb15f0d641b17a241b722393e5407d57a6",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsCompareFacesSharedDepsBB15B7E8": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFaces/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsDetectFacesRole80C76BF2": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalDetectFaces for the DetectFaces component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/Role/Resource"
            }
        },
        "UserPortalFunctionsDetectFacesRoleDefaultPolicyFD1CA8F3": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsDetectFacesRoleDefaultPolicyFD1CA8F3",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsDetectFacesRole80C76BF2"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/ce4007eac4ecbc736c0fb5a9772b975c40b2bd9fa6d4c52328789499f6c9bae7.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsDetectFacesRole80C76BF2",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for DetectFaces",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsDetectFacesSharedDeps049F610A"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsDetectFacesRoleDefaultPolicyFD1CA8F3",
                "UserPortalFunctionsDetectFacesRole80C76BF2"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/ce4007eac4ecbc736c0fb5a9772b975c40b2bd9fa6d4c52328789499f6c9bae7",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsDetectFacesSharedDeps049F610A": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/DetectFaces/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsSearchFacesRole378D7883": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalSearchFacesByImage for the SearchFaces component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/Role/Resource"
            }
        },
        "UserPortalFunctionsSearchFacesRoleDefaultPolicyF671B579": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsSearchFacesRoleDefaultPolicyF671B579",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsSearchFacesRole378D7883"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsSearchFacesLambdaFunction780C379C": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/8fb257c3f8566b869e94fdd04ca55f25453f99c9b45ae623445394609ef2de84.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsSearchFacesRole378D7883",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for SearchFaces",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsSearchFacesSharedDepsF6661C73"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsSearchFacesRoleDefaultPolicyF671B579",
                "UserPortalFunctionsSearchFacesRole378D7883"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/8fb257c3f8566b869e94fdd04ca55f25453f99c9b45ae623445394609ef2de84",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsSearchFacesSharedDepsF6661C73": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/SearchFaces/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsExtractIdCardRole4955A0C5": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalExtractIdCard for the Extract-IdCard component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonTextractFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/Role/Resource"
            }
        },
        "UserPortalFunctionsExtractIdCardRoleDefaultPolicy8AD0B36A": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject",
                                "s3:PutObjectLegalHold",
                                "s3:PutObjectRetention",
                                "s3:PutObjectTagging",
                                "s3:PutObjectVersionTagging",
                                "s3:Abort*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsExtractIdCardRoleDefaultPolicy8AD0B36A",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsExtractIdCardRole4955A0C5"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/f465b94300722488feca2fc6cd137d35950f113d081a16f678324b11af2f5dd9.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsExtractIdCardRole4955A0C5",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for Extract-IdCard",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsExtractIdCardSharedDeps8700438E"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsExtractIdCardRoleDefaultPolicy8AD0B36A",
                "UserPortalFunctionsExtractIdCardRole4955A0C5"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/f465b94300722488feca2fc6cd137d35950f113d081a16f678324b11af2f5dd9",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsExtractIdCardSharedDeps8700438E": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ExtractIdCard/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalCompareFacesWithIDCard for the CompareFacesWithIDCard component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/Role/Resource"
            }
        },
        "UserPortalFunctionsCompareFacesWithIDCardRoleDefaultPolicy61F09AF1": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsCompareFacesWithIDCardRoleDefaultPolicy61F09AF1",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/4716d14a566bfd85c3e7235bef643287bc655ae0deb3f07bdf296f717f8e225e.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for CompareFacesWithIDCard",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsCompareFacesWithIDCardSharedDeps54674489"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsCompareFacesWithIDCardRoleDefaultPolicy61F09AF1",
                "UserPortalFunctionsCompareFacesWithIDCardRole07FEC06D"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/4716d14a566bfd85c3e7235bef643287bc655ae0deb3f07bdf296f717f8e225e",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsCompareFacesWithIDCardSharedDeps54674489": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CompareFacesWithIDCard/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsResetUserRole2A662A9B": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalResetUser for the ResetUser component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/Role/Resource"
            }
        },
        "UserPortalFunctionsResetUserRoleDefaultPolicyA86D4936": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:Query",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:PutItem",
                                "dynamodb:UpdateItem",
                                "dynamodb:DeleteItem",
                                "dynamodb:DescribeTable"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageMetadataFaceTable609BE09F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsResetUserRoleDefaultPolicyA86D4936",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsResetUserRole2A662A9B"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsResetUserLambdaFunction42DCB7C0": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/4478d57ff9712eccdfe87499e59acd6e3186dbbb5efa81da6dd395c04e821067.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsResetUserRole2A662A9B",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for ResetUser",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsResetUserSharedDeps41F386E6"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsResetUserRoleDefaultPolicyA86D4936",
                "UserPortalFunctionsResetUserRole2A662A9B"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/4478d57ff9712eccdfe87499e59acd6e3186dbbb5efa81da6dd395c04e821067",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsResetUserSharedDeps41F386E6": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/ResetUser/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsStartLivenessSesstionRole59B60DAB": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalStartLivenessSession for the StartLivenessSession component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/StartLivenessSesstion/Role/Resource"
            }
        },
        "UserPortalFunctionsStartLivenessSesstionRoleDefaultPolicyE94046D4": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:PutObject",
                                "s3:PutObjectLegalHold",
                                "s3:PutObjectRetention",
                                "s3:PutObjectTagging",
                                "s3:PutObjectVersionTagging",
                                "s3:Abort*"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "SharedStorageImagesImageBucket7DE5900F",
                                                "Arn"
                                            ]
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsStartLivenessSesstionRoleDefaultPolicyE94046D4",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsStartLivenessSesstionRole59B60DAB"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/StartLivenessSesstion/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsStartLivenessSesstionLambdaFunctionAF5D813E": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/f912c95c7bb2c15a47a03ac166eb4e1bd57ab9897bff3c4fa4586a279810a250.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsStartLivenessSesstionRole59B60DAB",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for StartLivenessSession",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsStartLivenessSesstionSharedDepsC1C2C219"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsStartLivenessSesstionRoleDefaultPolicyE94046D4",
                "UserPortalFunctionsStartLivenessSesstionRole59B60DAB"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/StartLivenessSesstion/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/f912c95c7bb2c15a47a03ac166eb4e1bd57ab9897bff3c4fa4586a279810a250",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsStartLivenessSesstionSharedDepsC1C2C219": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/StartLivenessSesstion/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsLivenessSesstionResultRoleF162D5E7": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalLivenessSessionResult for the LivenessSesstionResult component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/LivenessSesstionResult/Role/Resource"
            }
        },
        "UserPortalFunctionsLivenessSesstionResultRoleDefaultPolicy9F34E511": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:PutObject",
                                "s3:PutObjectLegalHold",
                                "s3:PutObjectRetention",
                                "s3:PutObjectTagging",
                                "s3:PutObjectVersionTagging",
                                "s3:Abort*"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "SharedStorageImagesImageBucket7DE5900F",
                                                "Arn"
                                            ]
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsLivenessSesstionResultRoleDefaultPolicy9F34E511",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsLivenessSesstionResultRoleF162D5E7"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/LivenessSesstionResult/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsLivenessSesstionResultLambdaFunction45774E6D": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/154701e37017681bc172594f033569ce4590c6e668b47300532645f1d3b30dd3.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsLivenessSesstionResultRoleF162D5E7",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for LivenessSesstionResult",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsLivenessSesstionResultSharedDepsEC3AA9BB"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsLivenessSesstionResultRoleDefaultPolicy9F34E511",
                "UserPortalFunctionsLivenessSesstionResultRoleF162D5E7"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/LivenessSesstionResult/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/154701e37017681bc172594f033569ce4590c6e668b47300532645f1d3b30dd3",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsLivenessSesstionResultSharedDepsEC3AA9BB": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/LivenessSesstionResult/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsCheckUserIDRoleF4487A64": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalCheckUserID for the CheckUserID component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CheckUserID/Role/Resource"
            }
        },
        "UserPortalFunctionsCheckUserIDRoleDefaultPolicyED833D84": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:Query",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:PutItem",
                                "dynamodb:UpdateItem",
                                "dynamodb:DeleteItem",
                                "dynamodb:DescribeTable"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageMetadataFaceTable609BE09F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsCheckUserIDRoleDefaultPolicyED833D84",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsCheckUserIDRoleF4487A64"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CheckUserID/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsCheckUserIDLambdaFunction0189D9DC": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/61977a65210dc7b7d7231444ccbee0739907a3ed4b802830279f1aec83b58bde.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsCheckUserIDRoleF4487A64",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for CheckUserID",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsCheckUserIDSharedDepsE624140A"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsCheckUserIDRoleDefaultPolicyED833D84",
                "UserPortalFunctionsCheckUserIDRoleF4487A64"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CheckUserID/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/61977a65210dc7b7d7231444ccbee0739907a3ed4b802830279f1aec83b58bde",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsCheckUserIDSharedDepsE624140A": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/CheckUserID/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalFunctionsIndexFacesRole2B346555": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "RivUserPortalIndexFaces for the IndexFaces component.",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/Role/Resource"
            }
        },
        "UserPortalFunctionsIndexFacesRoleDefaultPolicyE258D60E": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "ssm:GetParameter*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:ssm:us-east-1:",
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/riv/Riv-Prod/rekognition/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:Query",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:ConditionCheckItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:PutItem",
                                "dynamodb:UpdateItem",
                                "dynamodb:DeleteItem",
                                "dynamodb:DescribeTable"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageMetadataFaceTable609BE09F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        },
                        {
                            "Action": [
                                "s3:PutObject",
                                "s3:PutObjectLegalHold",
                                "s3:PutObjectRetention",
                                "s3:PutObjectTagging",
                                "s3:PutObjectVersionTagging",
                                "s3:Abort*"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "SharedStorageImagesImageBucket7DE5900F",
                                                "Arn"
                                            ]
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        },
                        {
                            "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "SharedStorageImagesImageBucket7DE5900F",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "SharedStorageImagesImageBucket7DE5900F",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalFunctionsIndexFacesRoleDefaultPolicyE258D60E",
                "Roles": [
                    {
                        "Ref": "UserPortalFunctionsIndexFacesRole2B346555"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/e6c30fd0a3e33ca4d168fc683de58fc33f119de8e584a83feed0630389d2ae1b.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsIndexFacesRole2B346555",
                        "Arn"
                    ]
                },
                "Description": "Python container lambda function for IndexFaces",
                "Environment": {
                    "Variables": {
                        "REGION": "us-east-1",
                        "RIV_STACK_NAME": "Riv-Prod",
                        "FACE_TABLE_NAME": {
                            "Ref": "SharedStorageMetadataFaceTable609BE09F"
                        },
                        "IMAGE_BUCKET_NAME": {
                            "Ref": "SharedStorageImagesImageBucket7DE5900F"
                        }
                    }
                },
                "Handler": "handler.function_main",
                "Layers": [
                    {
                        "Ref": "UserPortalFunctionsIndexFacesSharedDepsCB1DAA9F"
                    }
                ],
                "MemorySize": 512,
                "Runtime": "python3.8",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Fn::GetAtt": [
                                "SecurityGroupDD263621",
                                "GroupId"
                            ]
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "RivProdNetworkDefaultSubnet1SubnetD8510F65"
                        },
                        {
                            "Ref": "RivProdNetworkDefaultSubnet2Subnet56EB9307"
                        }
                    ]
                }
            },
            "DependsOn": [
                "RivProdNetworkDefaultSubnet1DefaultRouteEF7C08C0",
                "RivProdNetworkDefaultSubnet1RouteTableAssociationFF12308F",
                "RivProdNetworkDefaultSubnet2DefaultRoute636C3E5F",
                "RivProdNetworkDefaultSubnet2RouteTableAssociation2FA5C94D",
                "UserPortalFunctionsIndexFacesRoleDefaultPolicyE258D60E",
                "UserPortalFunctionsIndexFacesRole2B346555"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/LambdaFunction/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/e6c30fd0a3e33ca4d168fc683de58fc33f119de8e584a83feed0630389d2ae1b",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "UserPortalFunctionsIndexFacesSharedDepsCB1DAA9F": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "Content": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb.zip"
                },
                "CompatibleRuntimes": [
                    "python3.8"
                ],
                "Description": "Shared dependencies"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Functions/IndexFaces/SharedDeps/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a8f2b22803d5b1cdcb3c78709530f305b4833e0aca3ee45887778be093e60feb",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Content"
            }
        },
        "UserPortalGatewayUserPortal1E4ECB13": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Description": "Gateway for RivUserPortalGateway",
                "Name": "Riv-Prod-UserPortal",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Resource"
            }
        },
        "UserPortalGatewayUserPortalCloudWatchRoleDF5FFE06": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "apigateway.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Retain",
            "DeletionPolicy": "Retain",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/CloudWatchRole/Resource"
            }
        },
        "UserPortalGatewayUserPortalAccount27E32CA6": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortalCloudWatchRoleDF5FFE06",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "UserPortalGatewayUserPortal1E4ECB13"
            ],
            "UpdateReplacePolicy": "Retain",
            "DeletionPolicy": "Retain",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Account"
            }
        },
        "UserPortalGatewayUserPortalDeployment0587A3E1770b37e93777426c73b8fa13eea48fdf": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "Description": "Gateway for RivUserPortalGateway"
            },
            "DependsOn": [
                "UserPortalGatewayModelsAuthenticateRequestFB958DEC",
                "UserPortalGatewayModelsAuthenticateUserResponse955C723F",
                "UserPortalGatewayModelsRegisterIdCardRequest233A1A2C",
                "UserPortalGatewayModelsRegisterUserRequest1C8965E9",
                "UserPortalGatewayModelsRegisterUserResponse6B39DB57",
                "UserPortalGatewayModelsUpdateUserRequest17A1D07F",
                "UserPortalGatewayModelsUpdateUserResponse9EB11910",
                "UserPortalGatewayUserPortalauthOPTIONS37D1C955",
                "UserPortalGatewayUserPortalauthPOSTF9F22DE9",
                "UserPortalGatewayUserPortalauth5BE56259",
                "UserPortalGatewayUserPortalcheckuseridOPTIONSF025758D",
                "UserPortalGatewayUserPortalcheckuseridPOST4A09CFAE",
                "UserPortalGatewayUserPortalcheckuserid3E4B906D",
                "UserPortalGatewayUserPortalextractidcardOPTIONS071DFCD3",
                "UserPortalGatewayUserPortalextractidcardPOSTACB3D84C",
                "UserPortalGatewayUserPortalextractidcardAAB52CA6",
                "UserPortalGatewayUserPortallivenesssessionresultOPTIONS0FE98C1D",
                "UserPortalGatewayUserPortallivenesssessionresultPOST5D08420E",
                "UserPortalGatewayUserPortallivenesssessionresult923D3DEA",
                "UserPortalGatewayUserPortalregisteridcardOPTIONSE68423D1",
                "UserPortalGatewayUserPortalregisteridcardPOSTBA092160",
                "UserPortalGatewayUserPortalregisteridcardEA71D997",
                "UserPortalGatewayUserPortalregisterOPTIONS01BD90E4",
                "UserPortalGatewayUserPortalregisterPOSTED32B081",
                "UserPortalGatewayUserPortalregisterBF491C41",
                "UserPortalGatewayUserPortalresetuserGETFA94F80B",
                "UserPortalGatewayUserPortalresetuserOPTIONS11A86403",
                "UserPortalGatewayUserPortalresetuser08DDCBCA",
                "UserPortalGatewayUserPortalstartlivenesssessionGETA801E478",
                "UserPortalGatewayUserPortalstartlivenesssessionOPTIONSD9071961",
                "UserPortalGatewayUserPortalstartlivenesssessionE42482FC",
                "UserPortalGatewayUserPortalupdateOPTIONS1FED7AD4",
                "UserPortalGatewayUserPortalupdatePOSTBE2945B5",
                "UserPortalGatewayUserPortalupdate3AED6692"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Deployment/Resource"
            }
        },
        "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "DeploymentId": {
                    "Ref": "UserPortalGatewayUserPortalDeployment0587A3E1770b37e93777426c73b8fa13eea48fdf"
                },
                "StageName": "prod",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "DependsOn": [
                "UserPortalGatewayUserPortalAccount27E32CA6"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/DeploymentStage.prod/Resource"
            }
        },
        "UserPortalGatewayUserPortalregisterBF491C41": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "register",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register/Resource"
            }
        },
        "UserPortalGatewayUserPortalregisterOPTIONS01BD90E4": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalregisterBF491C41"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Credentials": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalregisterPOSTED32B081": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalregisterBF491C41"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "UserPortalGatewayRole348935C3",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "200",
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "500",
                            "StatusCode": "500"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                                    {
                                        "Ref": "UserPortalStatesRegisterStateMachineB7136A77"
                                    },
                                    "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                                ]
                            ]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:states:action/StartSyncExecution"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": {
                                "Ref": "UserPortalGatewayModelsRegisterUserResponse6B39DB57"
                            }
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register/POST/Resource"
            }
        },
        "UserPortalGatewayUserPortalregisteridcardEA71D997": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "register-idcard",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register-idcard/Resource"
            }
        },
        "UserPortalGatewayUserPortalregisteridcardOPTIONSE68423D1": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalregisteridcardEA71D997"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Credentials": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register-idcard/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalregisteridcardPOSTBA092160": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalregisteridcardEA71D997"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "UserPortalGatewayRole348935C3",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "200",
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "500",
                            "StatusCode": "500"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                                    {
                                        "Ref": "UserPortalStatesRegisterIdCardStateMachine83835B73"
                                    },
                                    "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                                ]
                            ]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:states:action/StartSyncExecution"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": {
                                "Ref": "UserPortalGatewayModelsRegisterUserResponse6B39DB57"
                            }
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/register-idcard/POST/Resource"
            }
        },
        "UserPortalGatewayUserPortalupdate3AED6692": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "update",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/update/Resource"
            }
        },
        "UserPortalGatewayUserPortalupdateOPTIONS1FED7AD4": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalupdate3AED6692"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Credentials": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/update/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalupdatePOSTBE2945B5": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalupdate3AED6692"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "UserPortalGatewayRole348935C3",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "200",
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "500",
                            "StatusCode": "500"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                                    {
                                        "Ref": "UserPortalStatesUpdateStateMachineC5A4EA2D"
                                    },
                                    "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                                ]
                            ]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:states:action/StartSyncExecution"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": {
                                "Ref": "UserPortalGatewayModelsUpdateUserResponse9EB11910"
                            }
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/update/POST/Resource"
            }
        },
        "UserPortalGatewayUserPortalauth5BE56259": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "auth",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/auth/Resource"
            }
        },
        "UserPortalGatewayUserPortalauthOPTIONS37D1C955": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalauth5BE56259"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                                "method.response.header.Access-Control-Allow-Credentials": "'true'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Credentials": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/auth/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalauthPOSTF9F22DE9": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalauth5BE56259"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "UserPortalGatewayRole348935C3",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "200",
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'*'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "ResponseTemplates": {
                                "application/json": "$input.json('$')"
                            },
                            "SelectionPattern": "500",
                            "StatusCode": "500"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "\n  #set($inputRoot = $input.Path('$')) {\n    \"stateMachineArn\": \"",
                                    {
                                        "Ref": "UserPortalStatesAuthStateMachine89B3C1FA"
                                    },
                                    "\",\n    \"input\": \"{ \\\"inputRequest\\\": $util.escapeJavaScript( $input.json('$')) }\"\n  }\n  "
                                ]
                            ]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:states:action/StartSyncExecution"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": {
                                "Ref": "UserPortalGatewayModelsAuthenticateUserResponse955C723F"
                            }
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true,
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/auth/POST/Resource"
            }
        },
        "UserPortalGatewayUserPortalresetuser08DDCBCA": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "reset-user",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/Resource"
            }
        },
        "UserPortalGatewayUserPortalresetuserOPTIONS11A86403": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalresetuser08DDCBCA"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalresetuserGETApiPermissionRivProdUserPortalGatewayUserPortal50FAEFC0GETresetuserF1DFC08D": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsResetUserLambdaFunction42DCB7C0",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/",
                            {
                                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                            },
                            "/GET/reset-user"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/GET/ApiPermission.RivProdUserPortalGatewayUserPortal50FAEFC0.GET..reset-user"
            }
        },
        "UserPortalGatewayUserPortalresetuserGETApiPermissionTestRivProdUserPortalGatewayUserPortal50FAEFC0GETresetuser4F0F7109": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsResetUserLambdaFunction42DCB7C0",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/test-invoke-stage/GET/reset-user"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/GET/ApiPermission.Test.RivProdUserPortalGatewayUserPortal50FAEFC0.GET..reset-user"
            }
        },
        "UserPortalGatewayUserPortalresetuserGETFA94F80B": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalresetuser08DDCBCA"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "500"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsResetUserLambdaFunction42DCB7C0",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/reset-user/GET/Resource"
            }
        },
        "UserPortalGatewayUserPortalstartlivenesssessionE42482FC": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "start-liveness-session",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/start-liveness-session/Resource"
            }
        },
        "UserPortalGatewayUserPortalstartlivenesssessionOPTIONSD9071961": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalstartlivenesssessionE42482FC"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/start-liveness-session/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalstartlivenesssessionGETApiPermissionRivProdUserPortalGatewayUserPortal50FAEFC0GETstartlivenesssessionB919C901": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsStartLivenessSesstionLambdaFunctionAF5D813E",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/",
                            {
                                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                            },
                            "/GET/start-liveness-session"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/start-liveness-session/GET/ApiPermission.RivProdUserPortalGatewayUserPortal50FAEFC0.GET..start-liveness-session"
            }
        },
        "UserPortalGatewayUserPortalstartlivenesssessionGETApiPermissionTestRivProdUserPortalGatewayUserPortal50FAEFC0GETstartlivenesssession07804964": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsStartLivenessSesstionLambdaFunctionAF5D813E",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/test-invoke-stage/GET/start-liveness-session"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/start-liveness-session/GET/ApiPermission.Test.RivProdUserPortalGatewayUserPortal50FAEFC0.GET..start-liveness-session"
            }
        },
        "UserPortalGatewayUserPortalstartlivenesssessionGETA801E478": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalstartlivenesssessionE42482FC"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "500"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsStartLivenessSesstionLambdaFunctionAF5D813E",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/start-liveness-session/GET/Resource"
            }
        },
        "UserPortalGatewayUserPortallivenesssessionresult923D3DEA": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "liveness-session-result",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/liveness-session-result/Resource"
            }
        },
        "UserPortalGatewayUserPortallivenesssessionresultOPTIONS0FE98C1D": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortallivenesssessionresult923D3DEA"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/liveness-session-result/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortallivenesssessionresultPOSTApiPermissionRivProdUserPortalGatewayUserPortal50FAEFC0POSTlivenesssessionresult2475DC36": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsLivenessSesstionResultLambdaFunction45774E6D",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/",
                            {
                                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                            },
                            "/POST/liveness-session-result"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/liveness-session-result/POST/ApiPermission.RivProdUserPortalGatewayUserPortal50FAEFC0.POST..liveness-session-result"
            }
        },
        "UserPortalGatewayUserPortallivenesssessionresultPOSTApiPermissionTestRivProdUserPortalGatewayUserPortal50FAEFC0POSTlivenesssessionresultA5D25DD9": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsLivenessSesstionResultLambdaFunction45774E6D",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/test-invoke-stage/POST/liveness-session-result"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/liveness-session-result/POST/ApiPermission.Test.RivProdUserPortalGatewayUserPortal50FAEFC0.POST..liveness-session-result"
            }
        },
        "UserPortalGatewayUserPortallivenesssessionresultPOST5D08420E": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortallivenesssessionresult923D3DEA"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "500"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsLivenessSesstionResultLambdaFunction45774E6D",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/liveness-session-result/POST/Resource"
            }
        },
        "UserPortalGatewayUserPortalcheckuserid3E4B906D": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "check-userid",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/check-userid/Resource"
            }
        },
        "UserPortalGatewayUserPortalcheckuseridOPTIONSF025758D": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalcheckuserid3E4B906D"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/check-userid/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalcheckuseridPOSTApiPermissionRivProdUserPortalGatewayUserPortal50FAEFC0POSTcheckuserid5799E3EA": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsCheckUserIDLambdaFunction0189D9DC",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/",
                            {
                                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                            },
                            "/POST/check-userid"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/check-userid/POST/ApiPermission.RivProdUserPortalGatewayUserPortal50FAEFC0.POST..check-userid"
            }
        },
        "UserPortalGatewayUserPortalcheckuseridPOSTApiPermissionTestRivProdUserPortalGatewayUserPortal50FAEFC0POSTcheckuserid9A4EF367": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsCheckUserIDLambdaFunction0189D9DC",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/test-invoke-stage/POST/check-userid"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/check-userid/POST/ApiPermission.Test.RivProdUserPortalGatewayUserPortal50FAEFC0.POST..check-userid"
            }
        },
        "UserPortalGatewayUserPortalcheckuseridPOST4A09CFAE": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalcheckuserid3E4B906D"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "500"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsCheckUserIDLambdaFunction0189D9DC",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/check-userid/POST/Resource"
            }
        },
        "UserPortalGatewayUserPortalextractidcardAAB52CA6": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "UserPortalGatewayUserPortal1E4ECB13",
                        "RootResourceId"
                    ]
                },
                "PathPart": "extract-idcard",
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/extract-idcard/Resource"
            }
        },
        "UserPortalGatewayUserPortalextractidcardOPTIONS071DFCD3": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "OPTIONS",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalextractidcardAAB52CA6"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "StatusCode": "204"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": "{ statusCode: 200 }"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "StatusCode": "204"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/extract-idcard/OPTIONS/Resource"
            }
        },
        "UserPortalGatewayUserPortalextractidcardPOSTApiPermissionRivProdUserPortalGatewayUserPortal50FAEFC0POSTextractidcard9857024E": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/",
                            {
                                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                            },
                            "/POST/extract-idcard"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/extract-idcard/POST/ApiPermission.RivProdUserPortalGatewayUserPortal50FAEFC0.POST..extract-idcard"
            }
        },
        "UserPortalGatewayUserPortalextractidcardPOSTApiPermissionTestRivProdUserPortalGatewayUserPortal50FAEFC0POSTextractidcardC705241E": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            "/test-invoke-stage/POST/extract-idcard"
                        ]
                    ]
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/extract-idcard/POST/ApiPermission.Test.RivProdUserPortalGatewayUserPortal50FAEFC0.POST..extract-idcard"
            }
        },
        "UserPortalGatewayUserPortalextractidcardPOSTACB3D84C": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "UserPortalGatewayUserPortalextractidcardAAB52CA6"
                },
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "500"
                        }
                    ],
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsExtractIdCardLambdaFunctionB2515571",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseModels": {
                            "application/json": "Error"
                        },
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true
                        },
                        "StatusCode": "500"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/UserPortal/Default/extract-idcard/POST/Resource"
            }
        },
        "UserPortalGatewayModelsRegisterUserRequest1C8965E9": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Enroll a new user within the system.",
                "Name": "RegisterUserRequest",
                "Schema": {
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "Image": {
                            "description": "utf8(base64( image ))",
                            "type": "string"
                        },
                        "Properties": {
                            "description": "An arbitrary property bag.",
                            "type": "object"
                        }
                    },
                    "required": [
                        "UserId",
                        "Image",
                        "Properties"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/RegisterUserRequest/Resource"
            }
        },
        "UserPortalGatewayModelsUpdateUserRequest17A1D07F": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Update an existing users profile.",
                "Name": "UpdateUserRequest",
                "Schema": {
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "Image": {
                            "description": "utf8(base64( image ))",
                            "type": "string"
                        },
                        "Properties": {
                            "description": "An arbitrary property bag.",
                            "type": "object"
                        }
                    },
                    "required": [
                        "UserId",
                        "Image",
                        "Properties"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/UpdateUserRequest/Resource"
            }
        },
        "UserPortalGatewayModelsRegisterIdCardRequest233A1A2C": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Registers a new user with a valid id card.",
                "Name": "RegisterWithIdCardRequest",
                "Schema": {
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "Image": {
                            "description": "utf8(base64( image ))",
                            "type": "string"
                        },
                        "IdCard": {
                            "description": "utf8(base64( image ))",
                            "type": "string"
                        },
                        "Properties": {
                            "description": "An arbitrary property bag.",
                            "type": "object"
                        }
                    },
                    "required": [
                        "UserId",
                        "Image",
                        "IdCard",
                        "Properties"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/RegisterIdCardRequest/Resource"
            }
        },
        "UserPortalGatewayModelsAuthenticateRequestFB958DEC": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Verifies the caller matches their onfile photo",
                "Name": "AuthenticateUserRequest",
                "Schema": {
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "Image": {
                            "description": "utf8(base64( image ))",
                            "type": "string"
                        }
                    },
                    "required": [
                        "UserId",
                        "Image"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/AuthenticateRequest/Resource"
            }
        },
        "UserPortalGatewayModelsRegisterUserResponse6B39DB57": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Output from the Register operation.",
                "Name": "RegisterUserResponse",
                "Schema": {
                    "description": "The response from a register user flow.",
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "ImageId": {
                            "description": "Internal identifier for the user.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Outcome of the Register operation.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "UserId",
                        "ImageId",
                        "Status"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/RegisterUserResponse/Resource"
            }
        },
        "UserPortalGatewayModelsUpdateUserResponse9EB11910": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Output from the Update operation.",
                "Name": "UpdateUserResponse",
                "Schema": {
                    "description": "The response from a update user flow.",
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "ImageId": {
                            "description": "Internal identifier for the user.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Outcome of the Update operation.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "UserId",
                        "ImageId",
                        "Status"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/UpdateUserResponse/Resource"
            }
        },
        "UserPortalGatewayModelsAuthenticateUserResponse955C723F": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                },
                "ContentType": "application/json",
                "Description": "Output from the Authentication operation.",
                "Name": "AuthenticateUserResponse",
                "Schema": {
                    "description": "The response from a auth user flow.",
                    "properties": {
                        "UserId": {
                            "description": "Primary identifier for the user.",
                            "type": "string"
                        },
                        "Status": {
                            "description": "Outcome of the Authenticate operation.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "UserId",
                        "Status"
                    ],
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema#"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Models/AuthenticateUserResponse/Resource"
            }
        },
        "UserPortalGatewayRole348935C3": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "apigateway.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSStepFunctionsFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/Role/Resource"
            }
        },
        "UserPortalGatewayEndpointAddressA9B0266A": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Type": "String",
                "Value": {
                    "Fn::Join": [
                        "",
                        [
                            "https://",
                            {
                                "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                            },
                            ".execute-api.us-east-1.",
                            {
                                "Ref": "AWS::URLSuffix"
                            },
                            "/",
                            {
                                "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                            },
                            "/"
                        ]
                    ]
                },
                "Name": "/riv/Riv-Prod/userportal/url",
                "Tags": {
                    "riv_stack": "Riv-Prod"
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/Gateway/EndpointAddress/Resource"
            }
        },
        "UserPortalStatesRegisterLogGroup0CEA68C4": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 731,
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/LogGroup/Resource"
            }
        },
        "UserPortalStatesRegisterStateMachineRoleE0C66934": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "states.us-east-1.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/StateMachine/Role/Resource"
            }
        },
        "UserPortalStatesRegisterStateMachineRoleDefaultPolicyE95F5992": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogDelivery",
                                "logs:GetLogDelivery",
                                "logs:UpdateLogDelivery",
                                "logs:DeleteLogDelivery",
                                "logs:ListLogDeliveries",
                                "logs:PutResourcePolicy",
                                "logs:DescribeResourcePolicies",
                                "logs:DescribeLogGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                                "xray:GetSamplingRules",
                                "xray:GetSamplingTargets"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalStatesRegisterStateMachineRoleDefaultPolicyE95F5992",
                "Roles": [
                    {
                        "Ref": "UserPortalStatesRegisterStateMachineRoleE0C66934"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/StateMachine/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalStatesRegisterStateMachineB7136A77": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "UserPortalStatesRegisterStateMachineRoleE0C66934",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Search-ExistingFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.search.Payload.TopMatch.Face.ExternalImageId\",\"StringEquals\":\"Special:RIV_NO_FACE_MATCH\",\"Next\":\"Index-FaceInfo\"},{\"Variable\":\"$.search.Payload.TopMatch.Face.IsCallerUser\",\"BooleanEquals\":true,\"Next\":\"Index-FaceInfo\"}],\"Default\":\"UserAlreadyExistsError\"},\"UserAlreadyExistsError\":{\"Type\":\"Fail\",\"Error\":\"UserAlreadyExists\",\"Cause\":\"Cannot register double faces in same collections.\"},\"Index-FaceInfo\":{\"Next\":\"Registration-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Registration-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Registered\"},\"End\":true}},\"TimeoutSeconds\":30}"
                        ]
                    ]
                },
                "LoggingConfiguration": {
                    "Destinations": [
                        {
                            "CloudWatchLogsLogGroup": {
                                "LogGroupArn": {
                                    "Fn::GetAtt": [
                                        "UserPortalStatesRegisterLogGroup0CEA68C4",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ],
                    "IncludeExecutionData": true,
                    "Level": "ALL"
                },
                "StateMachineName": "Riv-Prod-UserPortal-Register_User",
                "StateMachineType": "EXPRESS",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "TracingConfiguration": {
                    "Enabled": true
                }
            },
            "DependsOn": [
                "UserPortalStatesRegisterStateMachineRoleDefaultPolicyE95F5992",
                "UserPortalStatesRegisterStateMachineRoleE0C66934"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register/StateMachine/Resource"
            }
        },
        "UserPortalStatesRegisterIdCardLogGroup476459F4": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 731,
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/LogGroup/Resource"
            }
        },
        "UserPortalStatesRegisterIdCardStateMachineRole9B336A52": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "states.us-east-1.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/StateMachine/Role/Resource"
            }
        },
        "UserPortalStatesRegisterIdCardStateMachineRoleDefaultPolicyB3AF50CD": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogDelivery",
                                "logs:GetLogDelivery",
                                "logs:UpdateLogDelivery",
                                "logs:DeleteLogDelivery",
                                "logs:ListLogDeliveries",
                                "logs:PutResourcePolicy",
                                "logs:DescribeResourcePolicies",
                                "logs:DescribeLogGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                                "xray:GetSamplingRules",
                                "xray:GetSamplingTargets"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalStatesRegisterIdCardStateMachineRoleDefaultPolicyB3AF50CD",
                "Roles": [
                    {
                        "Ref": "UserPortalStatesRegisterIdCardStateMachineRole9B336A52"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/StateMachine/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalStatesRegisterIdCardStateMachine83835B73": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "UserPortalStatesRegisterIdCardStateMachineRole9B336A52",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Search-ExistingFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Or\":[{\"Variable\":\"$.search.Payload.TopMatch.Face.ExternalImageId\",\"StringEquals\":\"Special:RIV_NO_FACE_MATCH\"},{\"Variable\":\"$.search.Payload.TopMatch.Face.IsCallerUser\",\"BooleanEquals\":true}],\"Next\":\"CompareFacesWithIDCard\"}],\"Default\":\"UserAlreadyExistsError\"},\"UserAlreadyExistsError\":{\"Type\":\"Fail\",\"Error\":\"UserAlreadyExists\",\"Cause\":\"Cannot register double faces in same collections.\"},\"CompareFacesWithIDCard\":{\"Next\":\"Check-FaceCompareWithIDCard\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsCompareFacesWithIDCardLambdaFunction99427197",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-FaceCompareWithIDCard\":{\"Type\":\"Choice\",\"Choices\":[{\"Or\":[{\"Variable\":\"$.search.Payload.IsMatch\",\"BooleanEquals\":true}],\"Next\":\"Index-FaceInfo\"}],\"Default\":\"FaceNotMatchWithIDCardError\"},\"FaceNotMatchWithIDCardError\":{\"Type\":\"Fail\",\"Error\":\"FaceNotMatchWithIDCard\",\"Cause\":\"User face not match with the provided ID Card.\"},\"Index-FaceInfo\":{\"Next\":\"Registration-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Registration-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Registered\"},\"End\":true}},\"TimeoutSeconds\":30}"
                        ]
                    ]
                },
                "LoggingConfiguration": {
                    "Destinations": [
                        {
                            "CloudWatchLogsLogGroup": {
                                "LogGroupArn": {
                                    "Fn::GetAtt": [
                                        "UserPortalStatesRegisterIdCardLogGroup476459F4",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ],
                    "IncludeExecutionData": true,
                    "Level": "ALL"
                },
                "StateMachineName": "Riv-Prod-UserPortal-Register_IdCard",
                "StateMachineType": "EXPRESS",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "TracingConfiguration": {
                    "Enabled": true
                }
            },
            "DependsOn": [
                "UserPortalStatesRegisterIdCardStateMachineRoleDefaultPolicyB3AF50CD",
                "UserPortalStatesRegisterIdCardStateMachineRole9B336A52"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Register-IdCard/StateMachine/Resource"
            }
        },
        "UserPortalStatesUpdateLogGroup5970DB72": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 731,
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/LogGroup/Resource"
            }
        },
        "UserPortalStatesUpdateStateMachineRoleF786B6C4": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "states.us-east-1.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/StateMachine/Role/Resource"
            }
        },
        "UserPortalStatesUpdateStateMachineRoleDefaultPolicy8C502444": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogDelivery",
                                "logs:GetLogDelivery",
                                "logs:UpdateLogDelivery",
                                "logs:DeleteLogDelivery",
                                "logs:ListLogDeliveries",
                                "logs:PutResourcePolicy",
                                "logs:DescribeResourcePolicies",
                                "logs:DescribeLogGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                                "xray:GetSamplingRules",
                                "xray:GetSamplingTargets"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalStatesUpdateStateMachineRoleDefaultPolicy8C502444",
                "Roles": [
                    {
                        "Ref": "UserPortalStatesUpdateStateMachineRoleF786B6C4"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/StateMachine/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalStatesUpdateStateMachineC5A4EA2D": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "UserPortalStatesUpdateStateMachineRoleF786B6C4",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Compare-CachedFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Compare-CachedFaces\":{\"Next\":\"CompareFaces-IsMatches\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.compare\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"CompareFaces-IsMatches\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.IsMatch\",\"BooleanEquals\":true,\"Next\":\"Index-FaceInfo\"}],\"Default\":\"Search-ExistingFaces\"},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.TopMatch.IsCallerUser\",\"BooleanEquals\":false,\"Next\":\"InvalidCredentials\"}],\"Default\":\"Index-FaceInfo\"},\"Index-FaceInfo\":{\"Next\":\"Update-Complete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.index\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsIndexFacesLambdaFunction6555F0B7",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Update-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"ImageId.$\":\"$.index.Payload.FaceRecord.Face.ImageId\",\"Status\":\"Updated\"},\"End\":true},\"InvalidCredentials\":{\"Type\":\"Fail\",\"Error\":\"UserAccessDenied\",\"Cause\":\"The wrong person is in the photo.\"}},\"TimeoutSeconds\":30}"
                        ]
                    ]
                },
                "LoggingConfiguration": {
                    "Destinations": [
                        {
                            "CloudWatchLogsLogGroup": {
                                "LogGroupArn": {
                                    "Fn::GetAtt": [
                                        "UserPortalStatesUpdateLogGroup5970DB72",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ],
                    "IncludeExecutionData": true,
                    "Level": "ALL"
                },
                "StateMachineName": "Riv-Prod-UserPortal-Update",
                "StateMachineType": "EXPRESS",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "TracingConfiguration": {
                    "Enabled": true
                }
            },
            "DependsOn": [
                "UserPortalStatesUpdateStateMachineRoleDefaultPolicy8C502444",
                "UserPortalStatesUpdateStateMachineRoleF786B6C4"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Update/StateMachine/Resource"
            }
        },
        "UserPortalStatesAuthLogGroupA8210BF9": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 731,
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/LogGroup/Resource"
            }
        },
        "UserPortalStatesAuthStateMachineRoleFF7A818C": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "states.us-east-1.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/StateMachine/Role/Resource"
            }
        },
        "UserPortalStatesAuthStateMachineRoleDefaultPolicyDB75CC13": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogDelivery",
                                "logs:GetLogDelivery",
                                "logs:UpdateLogDelivery",
                                "logs:DeleteLogDelivery",
                                "logs:ListLogDeliveries",
                                "logs:PutResourcePolicy",
                                "logs:DescribeResourcePolicies",
                                "logs:DescribeLogGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                                "xray:GetSamplingRules",
                                "xray:GetSamplingTargets"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                        "Arn"
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                                    "Arn"
                                                ]
                                            },
                                            ":*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "UserPortalStatesAuthStateMachineRoleDefaultPolicyDB75CC13",
                "Roles": [
                    {
                        "Ref": "UserPortalStatesAuthStateMachineRoleFF7A818C"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/StateMachine/Role/DefaultPolicy/Resource"
            }
        },
        "UserPortalStatesAuthStateMachine89B3C1FA": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "RoleArn": {
                    "Fn::GetAtt": [
                        "UserPortalStatesAuthStateMachineRoleFF7A818C",
                        "Arn"
                    ]
                },
                "DefinitionString": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"StartAt\":\"Check-ImageQuality\",\"States\":{\"Check-ImageQuality\":{\"Next\":\"Compare-CachedFaces\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.detection\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsDetectFacesLambdaFunctionC2191E4E",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Compare-CachedFaces\":{\"Next\":\"CompareFaces-IsMatches\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.compare\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsCompareFacesLambdaFunction0ED2F588",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"CompareFaces-IsMatches\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.IsMatch\",\"BooleanEquals\":true,\"Next\":\"Auth-Complete\"}],\"Default\":\"Search-ExistingFaces\"},\"Search-ExistingFaces\":{\"Next\":\"Check-SearchResults\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"InputPath\":\"$.inputRequest\",\"OutputPath\":\"$\",\"ResultPath\":\"$.search\",\"Resource\":\"arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                            {
                                "Fn::GetAtt": [
                                    "UserPortalFunctionsSearchFacesLambdaFunction780C379C",
                                    "Arn"
                                ]
                            },
                            "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Check-SearchResults\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.compare.Payload.TopMatch.IsCallerUser\",\"BooleanEquals\":false,\"Next\":\"InvalidCredentials\"}],\"Default\":\"Auth-Complete\"},\"Auth-Complete\":{\"Type\":\"Pass\",\"Parameters\":{\"UserId.$\":\"$.inputRequest.UserId\",\"Status\":\"Verified\"},\"End\":true},\"InvalidCredentials\":{\"Type\":\"Fail\",\"Error\":\"UserAccessDenied\",\"Cause\":\"The wrong person is in the photo.\"}},\"TimeoutSeconds\":30}"
                        ]
                    ]
                },
                "LoggingConfiguration": {
                    "Destinations": [
                        {
                            "CloudWatchLogsLogGroup": {
                                "LogGroupArn": {
                                    "Fn::GetAtt": [
                                        "UserPortalStatesAuthLogGroupA8210BF9",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ],
                    "IncludeExecutionData": true,
                    "Level": "ALL"
                },
                "StateMachineName": "Riv-Prod-UserPortal-Auth",
                "StateMachineType": "EXPRESS",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "TracingConfiguration": {
                    "Enabled": true
                }
            },
            "DependsOn": [
                "UserPortalStatesAuthStateMachineRoleDefaultPolicyDB75CC13",
                "UserPortalStatesAuthStateMachineRoleFF7A818C"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/UserPortal/States/Auth/StateMachine/Resource"
            }
        },
        "RekognitionSetupCollection0RekognitionCollection52D63172": {
            "Type": "Custom::AWS",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
                        "Arn"
                    ]
                },
                "Create": "{\"action\":\"createCollection\",\"service\":\"Rekognition\",\"parameters\":{\"CollectionId\":\"Riv-Prod-0\"},\"physicalResourceId\":{\"id\":\"RekogitionCollection:Riv-Prod-0\"}}",
                "Delete": "{\"action\":\"deleteCollection\",\"service\":\"Rekognition\",\"parameters\":{\"CollectionId\":\"Riv-Prod-0\"},\"physicalResourceId\":{\"id\":\"RekogitionCollection:Riv-Prod-0\"}}",
                "InstallLatestAwsSdk": true
            },
            "DependsOn": [
                "RekognitionSetupCollection0RekognitionCollectionCustomResourcePolicyC35EF824"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RekognitionSetup/Collection_0/RekognitionCollection/Resource/Default"
            }
        },
        "RekognitionSetupCollection0RekognitionCollectionCustomResourcePolicyC35EF824": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "rekognition:CreateCollection",
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "rekognition:DeleteCollection",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "RekognitionSetupCollection0RekognitionCollectionCustomResourcePolicyC35EF824",
                "Roles": [
                    {
                        "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RekognitionSetup/Collection_0/RekognitionCollection/CustomResourcePolicy/Resource"
            }
        },
        "RekognitionSetupPartitionCountParameter4827825C": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
                "Type": "String",
                "Value": "1",
                "Description": "Generated from /Users/vkachha/Documents/idv-final/finalChanges/rekognition-identity-verification/infra/services/rekognition/topology.py",
                "Name": "/riv/Riv-Prod/rekognition/partition-count",
                "Tags": {
                    "riv_stack": "Riv-Prod"
                },
                "Tier": "Standard"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RekognitionSetup/PartitionCountParameter/Resource"
            }
        },
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
            }
        },
        "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "aws-ml-blog",
                    "S3Key": "artifacts/rekognition-identity-verification-solution/a9d3d4d1afa000946b9863b3e7578a5a5ad86d88274b3639938aa2baebf822ce.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
                        "Arn"
                    ]
                },
                "Handler": "index.handler",
                "Runtime": "nodejs16.x",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 120
            },
            "DependsOn": [
                "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/AWS679f53fac002430cb0da5b7982bd2287/Resource",
                "aws:asset:path": "artifacts/rekognition-identity-verification-solution/a9d3d4d1afa000946b9863b3e7578a5a5ad86d88274b3639938aa2baebf822ce",
                "aws:asset:is-bundled": false,
                "aws:asset:property": "Code"
            }
        },
        "RIVCognitoRIVCognitoUserPoolFB23EA61": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
                "AccountRecoverySetting": {
                    "RecoveryMechanisms": [
                        {
                            "Name": "verified_phone_number",
                            "Priority": 1
                        },
                        {
                            "Name": "verified_email",
                            "Priority": 2
                        }
                    ]
                },
                "AdminCreateUserConfig": {
                    "AllowAdminCreateUserOnly": true
                },
                "EmailVerificationMessage": "The verification code to your new account is {####}",
                "EmailVerificationSubject": "Verify your new account",
                "SmsVerificationMessage": "The verification code to your new account is {####}",
                "UserPoolName": "Riv-Prod",
                "UserPoolTags": {
                    "riv_stack": "Riv-Prod"
                },
                "VerificationMessageTemplate": {
                    "DefaultEmailOption": "CONFIRM_WITH_CODE",
                    "EmailMessage": "The verification code to your new account is {####}",
                    "EmailSubject": "Verify your new account",
                    "SmsMessage": "The verification code to your new account is {####}"
                }
            },
            "UpdateReplacePolicy": "Retain",
            "DeletionPolicy": "Retain",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVCognito/RIV-Cognito-User-Pool/Resource"
            }
        },
        "RIVCognitoRIVCognitoClient9838B60D": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
                "UserPoolId": {
                    "Ref": "RIVCognitoRIVCognitoUserPoolFB23EA61"
                },
                "AllowedOAuthFlows": [
                    "implicit",
                    "code"
                ],
                "AllowedOAuthFlowsUserPoolClient": true,
                "AllowedOAuthScopes": [
                    "profile",
                    "phone",
                    "email",
                    "openid",
                    "aws.cognito.signin.user.admin"
                ],
                "CallbackURLs": [
                    "https://example.com"
                ],
                "ClientName": "Riv-Prod",
                "SupportedIdentityProviders": [
                    "COGNITO"
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVCognito/RIV-Cognito-Client/Resource"
            }
        },
        "RIVCognitoRIVIdentityPoolBA873C3F": {
            "Type": "AWS::Cognito::IdentityPool",
            "Properties": {
                "AllowUnauthenticatedIdentities": true,
                "CognitoIdentityProviders": [
                    {
                        "ClientId": {
                            "Ref": "RIVCognitoRIVCognitoClient9838B60D"
                        },
                        "ProviderName": {
                            "Fn::GetAtt": [
                                "RIVCognitoRIVCognitoUserPoolFB23EA61",
                                "ProviderName"
                            ]
                        }
                    }
                ],
                "IdentityPoolName": "Riv-Prod"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVCognito/RIV-IdentityPool"
            }
        },
        "RIVCognitoRIVIdentityPoolUnAuthRole7674F50F": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                                "StringEquals": {
                                    "cognito-identity.amazonaws.com:aud": {
                                        "Ref": "RIVCognitoRIVIdentityPoolBA873C3F"
                                    }
                                },
                                "ForAnyValue:StringLike": {
                                    "cognito-identity.amazonaws.com:amr": "unauthenticated"
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Description": "role for amplify riv-prod app",
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonRekognitionFullAccess"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVCognito/RIVIdentityPoolUnAuthRole/Resource"
            }
        },
        "RIVCognitoRIVIdentityPoolRoleAttachment12C0AA93": {
            "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
            "Properties": {
                "IdentityPoolId": {
                    "Ref": "RIVCognitoRIVIdentityPoolBA873C3F"
                },
                "Roles": {
                    "unauthenticated": {
                        "Fn::GetAtt": [
                            "RIVCognitoRIVIdentityPoolUnAuthRole7674F50F",
                            "Arn"
                        ]
                    }
                }
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVCognito/RIV-IdentityPool-Role-Attachment"
            }
        },
        "RIVWebAPPRIVWebAppRepo7790C97E": {
            "Type": "AWS::CodeCommit::Repository",
            "Properties": {
                "RepositoryName": "Riv-Prod-Repo",
                "Code": {
                    "S3": {
                        "Bucket": "aws-ml-blog",
                        "Key": "artifacts/rekognition-identity-verification-solution/65a556ed07c929a3d5f1358c139188e36913cb334172c6f58ce4e63076f2cc50.zip"
                    }
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App-Repo/Resource"
            }
        },
        "RIVWebAPPRIVWebAppRole65847576": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "amplify.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/Role/Resource"
            }
        },
        "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "codecommit:GitPull",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "RIVWebAPPRIVWebAppRepo7790C97E",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D",
                "Roles": [
                    {
                        "Ref": "RIVWebAPPRIVWebAppRole65847576"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/Role/DefaultPolicy/Resource"
            }
        },
        "RIVWebAPPRIVWebApp70A84C14": {
            "Type": "AWS::Amplify::App",
            "Properties": {
                "Name": "Riv-Prod",
                "AutoBranchCreationConfig": {
                    "AutoBranchCreationPatterns": [
                        "main/*",
                        "prod/*"
                    ],
                    "BasicAuthConfig": {
                        "EnableBasicAuth": false
                    },
                    "EnableAutoBranchCreation": true,
                    "EnableAutoBuild": true,
                    "EnablePullRequestPreview": true
                },
                "BasicAuthConfig": {
                    "EnableBasicAuth": false
                },
                "CustomRules": [
                    {
                        "Source": "</^((?!\\.(css|gif|ico|jpg|js|png|txt|svg|woff|ttf)$).)*$/>",
                        "Status": "200",
                        "Target": "/index.html"
                    }
                ],
                "EnvironmentVariables": [
                    {
                        "Name": "REACT_APP_ENV_API_URL",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "https://",
                                    {
                                        "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                                    },
                                    ".execute-api.us-east-1.",
                                    {
                                        "Ref": "AWS::URLSuffix"
                                    },
                                    "/",
                                    {
                                        "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                                    },
                                    "/"
                                ]
                            ]
                        }
                    },
                    {
                        "Name": "REACT_APP_IDENTITYPOOL_ID",
                        "Value": {
                            "Ref": "RIVCognitoRIVIdentityPoolBA873C3F"
                        }
                    },
                    {
                        "Name": "REACT_APP_USERPOOL_ID",
                        "Value": {
                            "Ref": "RIVCognitoRIVCognitoUserPoolFB23EA61"
                        }
                    },
                    {
                        "Name": "REACT_APP_WEBCLIENT_ID",
                        "Value": {
                            "Ref": "RIVCognitoRIVCognitoClient9838B60D"
                        }
                    },
                    {
                        "Name": "REACT_APP_REGION",
                        "Value": {
                            "Ref": "AWS::Region"
                        }
                    }
                ],
                "IAMServiceRole": {
                    "Fn::GetAtt": [
                        "RIVWebAPPRIVWebAppRole65847576",
                        "Arn"
                    ]
                },
                "Repository": {
                    "Fn::GetAtt": [
                        "RIVWebAPPRIVWebAppRepo7790C97E",
                        "CloneUrlHttp"
                    ]
                },
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/Resource"
            }
        },
        "RIVWebAPPRIVWebAppmainE864ED78": {
            "Type": "AWS::Amplify::Branch",
            "Properties": {
                "AppId": {
                    "Fn::GetAtt": [
                        "RIVWebAPPRIVWebApp70A84C14",
                        "AppId"
                    ]
                },
                "BranchName": "main",
                "EnableAutoBuild": true,
                "EnablePullRequestPreview": true,
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPP/RIV-Web-App/main/Resource"
            }
        },
        "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53": {
            "Type": "Custom::AWS",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
                        "Arn"
                    ]
                },
                "Create": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"action\":\"startJob\",\"service\":\"Amplify\",\"parameters\":{\"appId\":\"",
                            {
                                "Fn::GetAtt": [
                                    "RIVWebAPPRIVWebApp70A84C14",
                                    "AppId"
                                ]
                            },
                            "\",\"branchName\":\"main\",\"jobType\":\"RELEASE\",\"jobReason\":\"Auto Start build\"},\"physicalResourceId\":{\"id\":\"app-build-trigger\"}}"
                        ]
                    ]
                },
                "InstallLatestAwsSdk": true
            },
            "DependsOn": [
                "RIVWebAPPRIVWebAppRepo7790C97E",
                "RIVWebAPPRIVWebAppmainE864ED78",
                "RIVWebAPPRIVWebApp70A84C14",
                "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D",
                "RIVWebAPPRIVWebAppRole65847576",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPTrigger/RIV-Web-App-Trigger-Build/Resource/Default"
            }
        },
        "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "amplify:StartJob",
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
                "Roles": [
                    {
                        "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                    }
                ]
            },
            "DependsOn": [
                "RIVWebAPPRIVWebAppRepo7790C97E",
                "RIVWebAPPRIVWebAppmainE864ED78",
                "RIVWebAPPRIVWebApp70A84C14",
                "RIVWebAPPRIVWebAppRoleDefaultPolicyF5A64D0D",
                "RIVWebAPPRIVWebAppRole65847576"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPTrigger/RIV-Web-App-Trigger-Build/CustomResourcePolicy/Resource"
            }
        },
        "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AWSCloudFormationFullAccess"
                            ]
                        ]
                    },
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AdministratorAccess-Amplify"
                            ]
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ]
            },
            "DependsOn": [
                "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Lambda/ServiceRole/Resource"
            }
        },
        "RIVWebAPPStatusRIVWebAppLambdaServiceRoleDefaultPolicy14666126": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "RIVWebAPPStatusRIVWebAppLambdaServiceRoleDefaultPolicy14666126",
                "Roles": [
                    {
                        "Ref": "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD"
                    }
                ]
            },
            "DependsOn": [
                "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Lambda/ServiceRole/DefaultPolicy/Resource"
            }
        },
        "RIVWebAPPStatusRIVWebAppLambda32B2270A": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": "import json\nimport logging\nimport boto3\nfrom botocore.exceptions import ClientError\n\nclient = boto3.client('amplify')\n\n\ndef lambda_handler(event, context):\n    # apps = client.list_apps()\n    appName, appId = getApp(event['app'])\n    if(appName is not None):\n        branch = getBranch(appId, event['branch'])\n        if(branch is not None):\n            jobId = False\n            jobId = getJob(appId,branch)\n            if(jobId is not None):\n                while(jobId == False):\n                    job_status = client.get_job(\n                        appId=appId,\n                        branchName=branch,\n                        jobId=jobId\n                    )\n                    status = job_status['job']['summary']['status']\n                    if (status == 'FAILED' or status == 'SUCCEED' or status == 'CANCELLED'):\n                        jobId = True\n                        break\n    return {\n        \"status\":\"Amplify App deployed Successfully.\"\n    }\n    \n\n\ndef getApp(name):\n    apps = client.list_apps()\n    appName = None\n    appId = None\n    for sub in apps['apps']:\n        if sub['name'] == name:\n            appName = sub['name']\n            appId = sub['appId']\n            # deleteAPP = client.delete_app(\n            #     appId=sub['appId']\n            # )\n            break\n    return appName, appId\n\n\ndef getBranch(appId, name):\n    response = client.list_branches(appId=appId)\n    branchName = None\n    for sub in response['branches']:\n        if sub['branchName'] == name:\n            branchName = sub['branchName']\n            break\n    return branchName\n\n\ndef getJob(appId, branch):\n    jobs = client.list_jobs(\n        appId=appId,\n        branchName=branch,\n    )\n    jobId = None\n    for sub in jobs['jobSummaries']:\n        status = sub['status']\n        if (status == 'PENDING' or status == 'PROVISIONING' or status == 'RUNNING' or status == 'CANCELLING'):\n            jobId = sub['jobId']\n            break\n    return jobId\n\n\n\n"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD",
                        "Arn"
                    ]
                },
                "FunctionName": "Riv-Prod-webapp-deployment",
                "Handler": "index.lambda_handler",
                "Runtime": "python3.9",
                "Tags": [
                    {
                        "Key": "riv_stack",
                        "Value": "Riv-Prod"
                    }
                ],
                "Timeout": 600,
                "TracingConfig": {
                    "Mode": "Active"
                }
            },
            "DependsOn": [
                "RIVWebAPPStatusRIVWebAppLambdaServiceRoleDefaultPolicy14666126",
                "RIVWebAPPStatusRIVWebAppLambdaServiceRole76A26BCD",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Lambda/Resource"
            }
        },
        "RIVWebAPPStatusRIVWebAppDeployStatusDCE68B20": {
            "Type": "Custom::AWS",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
                        "Arn"
                    ]
                },
                "Create": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"action\":\"invoke\",\"service\":\"Lambda\",\"parameters\":{\"FunctionName\":\"",
                            {
                                "Ref": "RIVWebAPPStatusRIVWebAppLambda32B2270A"
                            },
                            "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"app\\\":\\\"Riv-Prod\\\",\\\"branch\\\":\\\"main\\\"}\"},\"physicalResourceId\":{\"id\":\"Riv-Prod-webapp-stack\"}}"
                        ]
                    ]
                },
                "Update": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"action\":\"invoke\",\"service\":\"Lambda\",\"parameters\":{\"FunctionName\":\"",
                            {
                                "Ref": "RIVWebAPPStatusRIVWebAppLambda32B2270A"
                            },
                            "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"app\\\":\\\"Riv-Prod\\\",\\\"branch\\\":\\\"main\\\"}\"},\"physicalResourceId\":{\"id\":\"Riv-Prod-webapp-stack\"}}"
                        ]
                    ]
                },
                "InstallLatestAwsSdk": true
            },
            "DependsOn": [
                "RIVWebAPPStatusRIVWebAppDeployStatusCustomResourcePolicyD077C86F",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
            ],
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Deploy-Status/Resource/Default"
            }
        },
        "RIVWebAPPStatusRIVWebAppDeployStatusCustomResourcePolicyD077C86F": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "RIVWebAPPStatusRIVWebAppLambda32B2270A",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "RIVWebAPPStatusRIVWebAppDeployStatusCustomResourcePolicyD077C86F",
                "Roles": [
                    {
                        "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
                    }
                ]
            },
            "DependsOn": [
                "RIVWebAPPTriggerRIVWebAppTriggerBuildCustomResourcePolicy5FEE58F3",
                "RIVWebAPPTriggerRIVWebAppTriggerBuildDAEECE53"
            ],
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/RIVWebAPPStatus/RIV-Web-App-Deploy-Status/CustomResourcePolicy/Resource"
            }
        },
        "CDKMetadata": {
            "Type": "AWS::CDK::Metadata",
            "Properties": {
                "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VUTY/aMBD9LdyNl+4eVr0V2A8hQRtByxUZZwCX2BPZzqIoyn/v2HESdnvye5MZ+828UR758zNvZhNxc1OZX6eFOvJm54W8MgodGpCPvNmXki1PZp8tWWbVh/Cwq44GfAiOaIuVh9/iWMAYH2Nz51Aq4RWaIZll1bFQcrzidZWF46fw7/TITdSBrYwHSwl3IVKS2NyT1osG49kOZGWVr98tVmWU8CmQCqiXV5OXqIxPN/W0ZXlthMacJjC0EUHL3BNvFpW8djIT6o6FcJSghObNFruieGZIrUW1HWpZIfQxF7x5q4zs5zDgtajB7sG69OErz8Bq5SLbKXMuwONQHPQdhHPgHZ+Hg4lSnbt+SRU4Py9VFDbCuZRY0QxeoCywjgOk6B2jJTh3TkZApVhZCaHdgaQ7O7wBf8E8hBLaYA5F5AGQSKfDblmSnwkrNJCvsbWe0Ijw7HizxvNgYo+p3EN5Sh27gxfu6vg6jnRlPvAKnxN4s7ygIllvQhUso+mEjjxsaF2U6RsbeMskno3yyJs/DmyGGJUPuAfLQqVR/R9Z5QRo3/riex5WYtzV8FoOErVWPhhUoqOnbd3Ns2ctE7os1Ik8DIaVcR4LK4y8tO3oQXQ8mERzDRm/Kl9WnsnKedQHm9JoM25uGWOje1/oaGbLZlNRlBfBZ5Mf6d/wEM6kKH1sgqhBUVaT7ebhiX/n32aTv06pqaUVUxr4tjv/AcjbhiFuBAAA"
            },
            "Metadata": {
                "aws:cdk:path": "Riv-Prod/CDKMetadata/Default"
            }
        }
    },
    "Outputs": {
        "UserPortalGatewayUserPortalEndpoint5EC0A06F": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "UserPortalGatewayUserPortal1E4ECB13"
                        },
                        ".execute-api.us-east-1.",
                        {
                            "Ref": "AWS::URLSuffix"
                        },
                        "/",
                        {
                            "Ref": "UserPortalGatewayUserPortalDeploymentStageprod784D2EBD"
                        },
                        "/"
                    ]
                ]
            }
        },
        "RIVWebAPPStatusRIVWebAppURL86E89525": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://main.",
                        {
                            "Fn::GetAtt": [
                                "RIVWebAPPRIVWebApp70A84C14",
                                "AppId"
                            ]
                        },
                        ".amplifyapp.com"
                    ]
                ]
            },
            "Export": {
                "Name": "RIV-Web-App-URL"
            }
        }
    }
}